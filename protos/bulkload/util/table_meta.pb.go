// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: util/table_meta.proto

package util

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TableSchemaList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schemas []*TableSchema `protobuf:"bytes,1,rep,name=schemas,proto3" json:"schemas,omitempty"`
	// IDs Integer.MAX_VALUE - (1-100) are used for metadata columns
	// IDs Integer.MAX_VALUE - (101-200) are used for reserved columns
	HighestFieldId uint32 `protobuf:"varint,3,opt,name=highest_field_id,json=highestFieldId,proto3" json:"highest_field_id,omitempty"`
}

func (x *TableSchemaList) Reset() {
	*x = TableSchemaList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_table_meta_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableSchemaList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableSchemaList) ProtoMessage() {}

func (x *TableSchemaList) ProtoReflect() protoreflect.Message {
	mi := &file_util_table_meta_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableSchemaList.ProtoReflect.Descriptor instead.
func (*TableSchemaList) Descriptor() ([]byte, []int) {
	return file_util_table_meta_proto_rawDescGZIP(), []int{0}
}

func (x *TableSchemaList) GetSchemas() []*TableSchema {
	if x != nil {
		return x.Schemas
	}
	return nil
}

func (x *TableSchemaList) GetHighestFieldId() uint32 {
	if x != nil {
		return x.HighestFieldId
	}
	return 0
}

type FieldSpecList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specs         []*FieldSpec `protobuf:"bytes,1,rep,name=specs,proto3" json:"specs,omitempty"`
	CurrentSpecId uint32       `protobuf:"varint,2,opt,name=current_spec_id,json=currentSpecId,proto3" json:"current_spec_id,omitempty"`
}

func (x *FieldSpecList) Reset() {
	*x = FieldSpecList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_table_meta_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldSpecList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldSpecList) ProtoMessage() {}

func (x *FieldSpecList) ProtoReflect() protoreflect.Message {
	mi := &file_util_table_meta_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldSpecList.ProtoReflect.Descriptor instead.
func (*FieldSpecList) Descriptor() ([]byte, []int) {
	return file_util_table_meta_proto_rawDescGZIP(), []int{1}
}

func (x *FieldSpecList) GetSpecs() []*FieldSpec {
	if x != nil {
		return x.Specs
	}
	return nil
}

func (x *FieldSpecList) GetCurrentSpecId() uint32 {
	if x != nil {
		return x.CurrentSpecId
	}
	return 0
}

type CompositeFieldSpecList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecList      []*FieldSpecList `protobuf:"bytes,1,rep,name=spec_list,json=specList,proto3" json:"spec_list,omitempty"`
	CurrentSpecId uint32           `protobuf:"varint,2,opt,name=current_spec_id,json=currentSpecId,proto3" json:"current_spec_id,omitempty"`
}

func (x *CompositeFieldSpecList) Reset() {
	*x = CompositeFieldSpecList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_table_meta_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompositeFieldSpecList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompositeFieldSpecList) ProtoMessage() {}

func (x *CompositeFieldSpecList) ProtoReflect() protoreflect.Message {
	mi := &file_util_table_meta_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompositeFieldSpecList.ProtoReflect.Descriptor instead.
func (*CompositeFieldSpecList) Descriptor() ([]byte, []int) {
	return file_util_table_meta_proto_rawDescGZIP(), []int{2}
}

func (x *CompositeFieldSpecList) GetSpecList() []*FieldSpecList {
	if x != nil {
		return x.SpecList
	}
	return nil
}

func (x *CompositeFieldSpecList) GetCurrentSpecId() uint32 {
	if x != nil {
		return x.CurrentSpecId
	}
	return 0
}

type DataFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath        string `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`                           // from Iceberg DataFile's file_path field
	FileSizeInBytes uint64 `protobuf:"varint,2,opt,name=file_size_in_bytes,json=fileSizeInBytes,proto3" json:"file_size_in_bytes,omitempty"` // from Iceberg DataFile's file_size_in_bytes field
}

func (x *DataFileInfo) Reset() {
	*x = DataFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_table_meta_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataFileInfo) ProtoMessage() {}

func (x *DataFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_util_table_meta_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataFileInfo.ProtoReflect.Descriptor instead.
func (*DataFileInfo) Descriptor() ([]byte, []int) {
	return file_util_table_meta_proto_rawDescGZIP(), []int{3}
}

func (x *DataFileInfo) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *DataFileInfo) GetFileSizeInBytes() uint64 {
	if x != nil {
		return x.FileSizeInBytes
	}
	return 0
}

type DataFileSplitSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableIdentifier *ObjectIdentifier `protobuf:"bytes,1,opt,name=table_identifier,json=tableIdentifier,proto3" json:"table_identifier,omitempty"`
	DataFileInfo    []*DataFileInfo   `protobuf:"bytes,2,rep,name=data_file_info,json=dataFileInfo,proto3" json:"data_file_info,omitempty"` // uint64 snapshot = 2;
}

func (x *DataFileSplitSource) Reset() {
	*x = DataFileSplitSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_table_meta_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataFileSplitSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataFileSplitSource) ProtoMessage() {}

func (x *DataFileSplitSource) ProtoReflect() protoreflect.Message {
	mi := &file_util_table_meta_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataFileSplitSource.ProtoReflect.Descriptor instead.
func (*DataFileSplitSource) Descriptor() ([]byte, []int) {
	return file_util_table_meta_proto_rawDescGZIP(), []int{4}
}

func (x *DataFileSplitSource) GetTableIdentifier() *ObjectIdentifier {
	if x != nil {
		return x.TableIdentifier
	}
	return nil
}

func (x *DataFileSplitSource) GetDataFileInfo() []*DataFileInfo {
	if x != nil {
		return x.DataFileInfo
	}
	return nil
}

type TableFormatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// common fields
	SnapshotId int64 `protobuf:"varint,1,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"` // dependency on snapshot id of table
	// extended table format
	//
	// Types that are assignable to Format:
	//
	//	*TableFormatInfo_Iceberg_
	Format isTableFormatInfo_Format `protobuf_oneof:"format"`
}

func (x *TableFormatInfo) Reset() {
	*x = TableFormatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_table_meta_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableFormatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableFormatInfo) ProtoMessage() {}

func (x *TableFormatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_util_table_meta_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableFormatInfo.ProtoReflect.Descriptor instead.
func (*TableFormatInfo) Descriptor() ([]byte, []int) {
	return file_util_table_meta_proto_rawDescGZIP(), []int{5}
}

func (x *TableFormatInfo) GetSnapshotId() int64 {
	if x != nil {
		return x.SnapshotId
	}
	return 0
}

func (m *TableFormatInfo) GetFormat() isTableFormatInfo_Format {
	if m != nil {
		return m.Format
	}
	return nil
}

func (x *TableFormatInfo) GetIceberg() *TableFormatInfo_Iceberg {
	if x, ok := x.GetFormat().(*TableFormatInfo_Iceberg_); ok {
		return x.Iceberg
	}
	return nil
}

type isTableFormatInfo_Format interface {
	isTableFormatInfo_Format()
}

type TableFormatInfo_Iceberg_ struct {
	Iceberg *TableFormatInfo_Iceberg `protobuf:"bytes,10,opt,name=iceberg,proto3,oneof"`
}

func (*TableFormatInfo_Iceberg_) isTableFormatInfo_Format() {}

type TableFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableFormatInfos []*TableFormatInfo `protobuf:"bytes,1,rep,name=table_format_infos,json=tableFormatInfos,proto3" json:"table_format_infos,omitempty"`
}

func (x *TableFormat) Reset() {
	*x = TableFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_table_meta_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableFormat) ProtoMessage() {}

func (x *TableFormat) ProtoReflect() protoreflect.Message {
	mi := &file_util_table_meta_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableFormat.ProtoReflect.Descriptor instead.
func (*TableFormat) Descriptor() ([]byte, []int) {
	return file_util_table_meta_proto_rawDescGZIP(), []int{6}
}

func (x *TableFormat) GetTableFormatInfos() []*TableFormatInfo {
	if x != nil {
		return x.TableFormatInfos
	}
	return nil
}

type TableMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId   int64     `protobuf:"varint,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	TableType TableType `protobuf:"varint,2,opt,name=table_type,json=tableType,proto3,enum=util.TableType" json:"table_type,omitempty"`
	// uint64 last_access_time = 12;
	TableSchema     *TableSchema `protobuf:"bytes,15,opt,name=table_schema,json=tableSchema,proto3" json:"table_schema,omitempty"`
	DataSource      *DataSource  `protobuf:"bytes,16,opt,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
	PrimaryKeySpec  *FieldSpec   `protobuf:"bytes,21,opt,name=primary_key_spec,json=primaryKeySpec,proto3" json:"primary_key_spec,omitempty"`
	SortOrderSpec   *FieldSpec   `protobuf:"bytes,22,opt,name=sort_order_spec,json=sortOrderSpec,proto3" json:"sort_order_spec,omitempty"`
	ClusterInfoSpec []*FieldSpec `protobuf:"bytes,23,rep,name=cluster_info_spec,json=clusterInfoSpec,proto3" json:"cluster_info_spec,omitempty"`
	UniqueKeySpec   []*FieldSpec `protobuf:"bytes,24,rep,name=unique_key_spec,json=uniqueKeySpec,proto3" json:"unique_key_spec,omitempty"`
	IndexSpec       []*FieldSpec `protobuf:"bytes,26,rep,name=index_spec,json=indexSpec,proto3" json:"index_spec,omitempty"`
	ForeignKeySpec  []*FieldSpec `protobuf:"bytes,31,rep,name=foreign_key_spec,json=foreignKeySpec,proto3" json:"foreign_key_spec,omitempty"`
	View            *View        `protobuf:"bytes,25,opt,name=view,proto3" json:"view,omitempty"`
	// TODO(chendong): check whether the snapshot id change if schema is changed
	CurrentSnapshotId int64        `protobuf:"varint,27,opt,name=current_snapshot_id,json=currentSnapshotId,proto3" json:"current_snapshot_id,omitempty"` // repeated uint64 snapshots = 28;
	TableFormat       *TableFormat `protobuf:"bytes,30,opt,name=table_format,json=tableFormat,proto3" json:"table_format,omitempty"`
}

func (x *TableMeta) Reset() {
	*x = TableMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_table_meta_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableMeta) ProtoMessage() {}

func (x *TableMeta) ProtoReflect() protoreflect.Message {
	mi := &file_util_table_meta_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableMeta.ProtoReflect.Descriptor instead.
func (*TableMeta) Descriptor() ([]byte, []int) {
	return file_util_table_meta_proto_rawDescGZIP(), []int{7}
}

func (x *TableMeta) GetTableId() int64 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *TableMeta) GetTableType() TableType {
	if x != nil {
		return x.TableType
	}
	return TableType_MANAGED_TABLE
}

func (x *TableMeta) GetTableSchema() *TableSchema {
	if x != nil {
		return x.TableSchema
	}
	return nil
}

func (x *TableMeta) GetDataSource() *DataSource {
	if x != nil {
		return x.DataSource
	}
	return nil
}

func (x *TableMeta) GetPrimaryKeySpec() *FieldSpec {
	if x != nil {
		return x.PrimaryKeySpec
	}
	return nil
}

func (x *TableMeta) GetSortOrderSpec() *FieldSpec {
	if x != nil {
		return x.SortOrderSpec
	}
	return nil
}

func (x *TableMeta) GetClusterInfoSpec() []*FieldSpec {
	if x != nil {
		return x.ClusterInfoSpec
	}
	return nil
}

func (x *TableMeta) GetUniqueKeySpec() []*FieldSpec {
	if x != nil {
		return x.UniqueKeySpec
	}
	return nil
}

func (x *TableMeta) GetIndexSpec() []*FieldSpec {
	if x != nil {
		return x.IndexSpec
	}
	return nil
}

func (x *TableMeta) GetForeignKeySpec() []*FieldSpec {
	if x != nil {
		return x.ForeignKeySpec
	}
	return nil
}

func (x *TableMeta) GetView() *View {
	if x != nil {
		return x.View
	}
	return nil
}

func (x *TableMeta) GetCurrentSnapshotId() int64 {
	if x != nil {
		return x.CurrentSnapshotId
	}
	return 0
}

func (x *TableMeta) GetTableFormat() *TableFormat {
	if x != nil {
		return x.TableFormat
	}
	return nil
}

type TableFormatInfo_Iceberg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetadataLocation string `protobuf:"bytes,1,opt,name=metadata_location,json=metadataLocation,proto3" json:"metadata_location,omitempty"`
	CurrentVersion   int64  `protobuf:"varint,2,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`
}

func (x *TableFormatInfo_Iceberg) Reset() {
	*x = TableFormatInfo_Iceberg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_table_meta_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableFormatInfo_Iceberg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableFormatInfo_Iceberg) ProtoMessage() {}

func (x *TableFormatInfo_Iceberg) ProtoReflect() protoreflect.Message {
	mi := &file_util_table_meta_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableFormatInfo_Iceberg.ProtoReflect.Descriptor instead.
func (*TableFormatInfo_Iceberg) Descriptor() ([]byte, []int) {
	return file_util_table_meta_proto_rawDescGZIP(), []int{5, 0}
}

func (x *TableFormatInfo_Iceberg) GetMetadataLocation() string {
	if x != nil {
		return x.MetadataLocation
	}
	return ""
}

func (x *TableFormatInfo_Iceberg) GetCurrentVersion() int64 {
	if x != nil {
		return x.CurrentVersion
	}
	return 0
}

var File_util_table_meta_proto protoreflect.FileDescriptor

var file_util_table_meta_proto_rawDesc = []byte{
	0x0a, 0x15, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x74, 0x69, 0x6c, 0x1a, 0x17, 0x75,
	0x74, 0x69, 0x6c, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x0f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x07, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x22, 0x5e,
	0x0a, 0x0d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x49, 0x64, 0x22, 0x72,
	0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x53, 0x70, 0x65, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x74,
	0x69, 0x6c, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x63, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x49, 0x64, 0x22, 0x58, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x2b, 0x0a, 0x12, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x69, 0x6e, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x92, 0x01, 0x0a,
	0x13, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x10, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xd8, 0x01, 0x0a, 0x0f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x07, 0x69, 0x63, 0x65, 0x62, 0x65, 0x72,
	0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x49,
	0x63, 0x65, 0x62, 0x65, 0x72, 0x67, 0x48, 0x00, 0x52, 0x07, 0x69, 0x63, 0x65, 0x62, 0x65, 0x72,
	0x67, 0x1a, 0x5f, 0x0a, 0x07, 0x49, 0x63, 0x65, 0x62, 0x65, 0x72, 0x67, 0x12, 0x2b, 0x0a, 0x11,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x52, 0x0a, 0x0b,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x43, 0x0a, 0x12, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x22, 0x9a, 0x05, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x75, 0x74, 0x69, 0x6c, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x31, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x39, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75,
	0x74, 0x69, 0x6c, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0e, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x37, 0x0a,
	0x0f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x3b, 0x0a, 0x11, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x17, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x0f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x37, 0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75,
	0x74, 0x69, 0x6c, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0d, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2e, 0x0a, 0x0a,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x70, 0x65, 0x63, 0x12, 0x39, 0x0a, 0x10,
	0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0e, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x4b, 0x65, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x75, 0x74, 0x69, 0x6c, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x42, 0x39, 0x5a,
	0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x69, 0x63,
	0x6b, 0x7a, 0x65, 0x74, 0x74, 0x61, 0x2f, 0x67, 0x6f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x7a, 0x65,
	0x74, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_util_table_meta_proto_rawDescOnce sync.Once
	file_util_table_meta_proto_rawDescData = file_util_table_meta_proto_rawDesc
)

func file_util_table_meta_proto_rawDescGZIP() []byte {
	file_util_table_meta_proto_rawDescOnce.Do(func() {
		file_util_table_meta_proto_rawDescData = protoimpl.X.CompressGZIP(file_util_table_meta_proto_rawDescData)
	})
	return file_util_table_meta_proto_rawDescData
}

var file_util_table_meta_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_util_table_meta_proto_goTypes = []interface{}{
	(*TableSchemaList)(nil),         // 0: util.TableSchemaList
	(*FieldSpecList)(nil),           // 1: util.FieldSpecList
	(*CompositeFieldSpecList)(nil),  // 2: util.CompositeFieldSpecList
	(*DataFileInfo)(nil),            // 3: util.DataFileInfo
	(*DataFileSplitSource)(nil),     // 4: util.DataFileSplitSource
	(*TableFormatInfo)(nil),         // 5: util.TableFormatInfo
	(*TableFormat)(nil),             // 6: util.TableFormat
	(*TableMeta)(nil),               // 7: util.TableMeta
	(*TableFormatInfo_Iceberg)(nil), // 8: util.TableFormatInfo.Iceberg
	(*TableSchema)(nil),             // 9: util.TableSchema
	(*FieldSpec)(nil),               // 10: util.FieldSpec
	(*ObjectIdentifier)(nil),        // 11: util.ObjectIdentifier
	(TableType)(0),                  // 12: util.TableType
	(*DataSource)(nil),              // 13: util.DataSource
	(*View)(nil),                    // 14: util.View
}
var file_util_table_meta_proto_depIdxs = []int32{
	9,  // 0: util.TableSchemaList.schemas:type_name -> util.TableSchema
	10, // 1: util.FieldSpecList.specs:type_name -> util.FieldSpec
	1,  // 2: util.CompositeFieldSpecList.spec_list:type_name -> util.FieldSpecList
	11, // 3: util.DataFileSplitSource.table_identifier:type_name -> util.ObjectIdentifier
	3,  // 4: util.DataFileSplitSource.data_file_info:type_name -> util.DataFileInfo
	8,  // 5: util.TableFormatInfo.iceberg:type_name -> util.TableFormatInfo.Iceberg
	5,  // 6: util.TableFormat.table_format_infos:type_name -> util.TableFormatInfo
	12, // 7: util.TableMeta.table_type:type_name -> util.TableType
	9,  // 8: util.TableMeta.table_schema:type_name -> util.TableSchema
	13, // 9: util.TableMeta.data_source:type_name -> util.DataSource
	10, // 10: util.TableMeta.primary_key_spec:type_name -> util.FieldSpec
	10, // 11: util.TableMeta.sort_order_spec:type_name -> util.FieldSpec
	10, // 12: util.TableMeta.cluster_info_spec:type_name -> util.FieldSpec
	10, // 13: util.TableMeta.unique_key_spec:type_name -> util.FieldSpec
	10, // 14: util.TableMeta.index_spec:type_name -> util.FieldSpec
	10, // 15: util.TableMeta.foreign_key_spec:type_name -> util.FieldSpec
	14, // 16: util.TableMeta.view:type_name -> util.View
	6,  // 17: util.TableMeta.table_format:type_name -> util.TableFormat
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_util_table_meta_proto_init() }
func file_util_table_meta_proto_init() {
	if File_util_table_meta_proto != nil {
		return
	}
	file_util_table_common_proto_init()
	file_util_object_identifier_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_util_table_meta_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableSchemaList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_table_meta_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldSpecList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_table_meta_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompositeFieldSpecList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_table_meta_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_table_meta_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataFileSplitSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_table_meta_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableFormatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_table_meta_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_table_meta_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_table_meta_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableFormatInfo_Iceberg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_util_table_meta_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*TableFormatInfo_Iceberg_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_util_table_meta_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_util_table_meta_proto_goTypes,
		DependencyIndexes: file_util_table_meta_proto_depIdxs,
		MessageInfos:      file_util_table_meta_proto_msgTypes,
	}.Build()
	File_util_table_meta_proto = out.File
	file_util_table_meta_proto_rawDesc = nil
	file_util_table_meta_proto_goTypes = nil
	file_util_table_meta_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: util/metadata_entity.proto

package util

import (
	rm "github.com/clickzetta/goclickzetta/protos/bulkload/rm"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Entity_Category int32

const (
	Entity_MANAGED  Entity_Category = 0
	Entity_EXTERNAL Entity_Category = 1
	Entity_SHARED   Entity_Category = 2
)

// Enum value maps for Entity_Category.
var (
	Entity_Category_name = map[int32]string{
		0: "MANAGED",
		1: "EXTERNAL",
		2: "SHARED",
	}
	Entity_Category_value = map[string]int32{
		"MANAGED":  0,
		"EXTERNAL": 1,
		"SHARED":   2,
	}
)

func (x Entity_Category) Enum() *Entity_Category {
	p := new(Entity_Category)
	*p = x
	return p
}

func (x Entity_Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Entity_Category) Descriptor() protoreflect.EnumDescriptor {
	return file_util_metadata_entity_proto_enumTypes[0].Descriptor()
}

func (Entity_Category) Type() protoreflect.EnumType {
	return &file_util_metadata_entity_proto_enumTypes[0]
}

func (x Entity_Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Entity_Category.Descriptor instead.
func (Entity_Category) EnumDescriptor() ([]byte, []int) {
	return file_util_metadata_entity_proto_rawDescGZIP(), []int{0, 0}
}

type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier     *ObjectIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3,oneof" json:"identifier,omitempty"`
	Creator        int64             `protobuf:"varint,2,opt,name=creator,proto3" json:"creator,omitempty"`
	CreatorType    PrincipalType     `protobuf:"varint,3,opt,name=creator_type,json=creatorType,proto3,enum=util.PrincipalType" json:"creator_type,omitempty"`
	Comment        *string           `protobuf:"bytes,4,opt,name=comment,proto3,oneof" json:"comment,omitempty"`
	Properties     []*Property       `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty"`
	CreateTime     int64             `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	LastModifyTime int64             `protobuf:"varint,7,opt,name=last_modify_time,json=lastModifyTime,proto3" json:"last_modify_time,omitempty"`
	State          ObjectState_Type  `protobuf:"varint,8,opt,name=state,proto3,enum=util.ObjectState_Type" json:"state,omitempty"`
	Category       Entity_Category   `protobuf:"varint,9,opt,name=category,proto3,enum=util.Entity_Category" json:"category,omitempty"`
	// Types that are assignable to Entity:
	//
	//	*Entity_Workspace
	//	*Entity_Schema
	//	*Entity_Table
	//	*Entity_User
	//	*Entity_Role
	//	*Entity_Job
	//	*Entity_VirtualCluster
	//	*Entity_File
	//	*Entity_VirtualClusterSizeSpec
	//	*Entity_Share
	//	*Entity_Function
	//	*Entity_Connection
	//	*Entity_NetworkPolicy
	//	*Entity_Index
	Entity isEntity_Entity `protobuf_oneof:"entity"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_metadata_entity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_util_metadata_entity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_util_metadata_entity_proto_rawDescGZIP(), []int{0}
}

func (x *Entity) GetIdentifier() *ObjectIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *Entity) GetCreator() int64 {
	if x != nil {
		return x.Creator
	}
	return 0
}

func (x *Entity) GetCreatorType() PrincipalType {
	if x != nil {
		return x.CreatorType
	}
	return PrincipalType_PT_USER
}

func (x *Entity) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *Entity) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Entity) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Entity) GetLastModifyTime() int64 {
	if x != nil {
		return x.LastModifyTime
	}
	return 0
}

func (x *Entity) GetState() ObjectState_Type {
	if x != nil {
		return x.State
	}
	return ObjectState_ONLINE
}

func (x *Entity) GetCategory() Entity_Category {
	if x != nil {
		return x.Category
	}
	return Entity_MANAGED
}

func (m *Entity) GetEntity() isEntity_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (x *Entity) GetWorkspace() *Workspace {
	if x, ok := x.GetEntity().(*Entity_Workspace); ok {
		return x.Workspace
	}
	return nil
}

func (x *Entity) GetSchema() *Schema {
	if x, ok := x.GetEntity().(*Entity_Schema); ok {
		return x.Schema
	}
	return nil
}

func (x *Entity) GetTable() *TableMeta {
	if x, ok := x.GetEntity().(*Entity_Table); ok {
		return x.Table
	}
	return nil
}

func (x *Entity) GetUser() *User {
	if x, ok := x.GetEntity().(*Entity_User); ok {
		return x.User
	}
	return nil
}

func (x *Entity) GetRole() *Role {
	if x, ok := x.GetEntity().(*Entity_Role); ok {
		return x.Role
	}
	return nil
}

func (x *Entity) GetJob() *JobMeta {
	if x, ok := x.GetEntity().(*Entity_Job); ok {
		return x.Job
	}
	return nil
}

func (x *Entity) GetVirtualCluster() *VirtualClusterMeta {
	if x, ok := x.GetEntity().(*Entity_VirtualCluster); ok {
		return x.VirtualCluster
	}
	return nil
}

func (x *Entity) GetFile() *FileMetaData {
	if x, ok := x.GetEntity().(*Entity_File); ok {
		return x.File
	}
	return nil
}

func (x *Entity) GetVirtualClusterSizeSpec() *rm.VirtualClusterSizeSpec {
	if x, ok := x.GetEntity().(*Entity_VirtualClusterSizeSpec); ok {
		return x.VirtualClusterSizeSpec
	}
	return nil
}

func (x *Entity) GetShare() *Share {
	if x, ok := x.GetEntity().(*Entity_Share); ok {
		return x.Share
	}
	return nil
}

func (x *Entity) GetFunction() *Function {
	if x, ok := x.GetEntity().(*Entity_Function); ok {
		return x.Function
	}
	return nil
}

func (x *Entity) GetConnection() *Connection {
	if x, ok := x.GetEntity().(*Entity_Connection); ok {
		return x.Connection
	}
	return nil
}

func (x *Entity) GetNetworkPolicy() *NetworkPolicy {
	if x, ok := x.GetEntity().(*Entity_NetworkPolicy); ok {
		return x.NetworkPolicy
	}
	return nil
}

func (x *Entity) GetIndex() *Index {
	if x, ok := x.GetEntity().(*Entity_Index); ok {
		return x.Index
	}
	return nil
}

type isEntity_Entity interface {
	isEntity_Entity()
}

type Entity_Workspace struct {
	Workspace *Workspace `protobuf:"bytes,10,opt,name=workspace,proto3,oneof"`
}

type Entity_Schema struct {
	Schema *Schema `protobuf:"bytes,11,opt,name=schema,proto3,oneof"`
}

type Entity_Table struct {
	Table *TableMeta `protobuf:"bytes,12,opt,name=table,proto3,oneof"`
}

type Entity_User struct {
	User *User `protobuf:"bytes,13,opt,name=user,proto3,oneof"`
}

type Entity_Role struct {
	Role *Role `protobuf:"bytes,14,opt,name=role,proto3,oneof"`
}

type Entity_Job struct {
	Job *JobMeta `protobuf:"bytes,15,opt,name=job,proto3,oneof"`
}

type Entity_VirtualCluster struct {
	VirtualCluster *VirtualClusterMeta `protobuf:"bytes,16,opt,name=virtual_cluster,json=virtualCluster,proto3,oneof"`
}

type Entity_File struct {
	File *FileMetaData `protobuf:"bytes,17,opt,name=file,proto3,oneof"`
}

type Entity_VirtualClusterSizeSpec struct {
	VirtualClusterSizeSpec *rm.VirtualClusterSizeSpec `protobuf:"bytes,18,opt,name=virtual_cluster_size_spec,json=virtualClusterSizeSpec,proto3,oneof"`
}

type Entity_Share struct {
	Share *Share `protobuf:"bytes,19,opt,name=share,proto3,oneof"`
}

type Entity_Function struct {
	Function *Function `protobuf:"bytes,20,opt,name=function,proto3,oneof"`
}

type Entity_Connection struct {
	Connection *Connection `protobuf:"bytes,21,opt,name=connection,proto3,oneof"`
}

type Entity_NetworkPolicy struct {
	NetworkPolicy *NetworkPolicy `protobuf:"bytes,22,opt,name=network_policy,json=networkPolicy,proto3,oneof"`
}

type Entity_Index struct {
	Index *Index `protobuf:"bytes,23,opt,name=index,proto3,oneof"`
}

func (*Entity_Workspace) isEntity_Entity() {}

func (*Entity_Schema) isEntity_Entity() {}

func (*Entity_Table) isEntity_Entity() {}

func (*Entity_User) isEntity_Entity() {}

func (*Entity_Role) isEntity_Entity() {}

func (*Entity_Job) isEntity_Entity() {}

func (*Entity_VirtualCluster) isEntity_Entity() {}

func (*Entity_File) isEntity_Entity() {}

func (*Entity_VirtualClusterSizeSpec) isEntity_Entity() {}

func (*Entity_Share) isEntity_Entity() {}

func (*Entity_Function) isEntity_Entity() {}

func (*Entity_Connection) isEntity_Entity() {}

func (*Entity_NetworkPolicy) isEntity_Entity() {}

func (*Entity_Index) isEntity_Entity() {}

type EntityList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities []*Entity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *EntityList) Reset() {
	*x = EntityList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_metadata_entity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityList) ProtoMessage() {}

func (x *EntityList) ProtoReflect() protoreflect.Message {
	mi := &file_util_metadata_entity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityList.ProtoReflect.Descriptor instead.
func (*EntityList) Descriptor() ([]byte, []int) {
	return file_util_metadata_entity_proto_rawDescGZIP(), []int{1}
}

func (x *EntityList) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

var File_util_metadata_entity_proto protoreflect.FileDescriptor

var file_util_metadata_entity_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x74,
	0x69, 0x6c, 0x1a, 0x1c, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x75, 0x74, 0x69,
	0x6c, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x75, 0x74, 0x69, 0x6c, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12,
	0x75, 0x74, 0x69, 0x6c, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x6a,
	0x6f, 0x62, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x75,
	0x74, 0x69, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x72, 0x6d, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x75,
	0x74, 0x69, 0x6c, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x75, 0x74, 0x69, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x75, 0x74, 0x69, 0x6c,
	0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x09, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x3b, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x01, 0x52, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x75, 0x74, 0x69, 0x6c, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x75, 0x74, 0x69, 0x6c,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x75, 0x74, 0x69, 0x6c, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x74,
	0x69, 0x6c, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x12, 0x27, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x20,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75,
	0x74, 0x69, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x21, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x75, 0x74, 0x69, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x03,
	0x6a, 0x6f, 0x62, 0x12, 0x43, 0x0a, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75,
	0x74, 0x69, 0x6c, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x57, 0x0a, 0x19, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x6d, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x48, 0x00, 0x52, 0x16, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x23, 0x0a, 0x05, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x12, 0x2c, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x48,
	0x00, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x23, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x48, 0x00, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x31, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x48, 0x41, 0x52, 0x45, 0x44, 0x10, 0x02, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x36, 0x0a,
	0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x75, 0x74, 0x69, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x7a, 0x65, 0x74, 0x74, 0x61, 0x2f, 0x67,
	0x6f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x7a, 0x65, 0x74, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x75, 0x74, 0x69, 0x6c,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_util_metadata_entity_proto_rawDescOnce sync.Once
	file_util_metadata_entity_proto_rawDescData = file_util_metadata_entity_proto_rawDesc
)

func file_util_metadata_entity_proto_rawDescGZIP() []byte {
	file_util_metadata_entity_proto_rawDescOnce.Do(func() {
		file_util_metadata_entity_proto_rawDescData = protoimpl.X.CompressGZIP(file_util_metadata_entity_proto_rawDescData)
	})
	return file_util_metadata_entity_proto_rawDescData
}

var file_util_metadata_entity_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_util_metadata_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_util_metadata_entity_proto_goTypes = []interface{}{
	(Entity_Category)(0),              // 0: util.Entity.Category
	(*Entity)(nil),                    // 1: util.Entity
	(*EntityList)(nil),                // 2: util.EntityList
	(*ObjectIdentifier)(nil),          // 3: util.ObjectIdentifier
	(PrincipalType)(0),                // 4: util.PrincipalType
	(*Property)(nil),                  // 5: util.Property
	(ObjectState_Type)(0),             // 6: util.ObjectState.Type
	(*Workspace)(nil),                 // 7: util.Workspace
	(*Schema)(nil),                    // 8: util.Schema
	(*TableMeta)(nil),                 // 9: util.TableMeta
	(*User)(nil),                      // 10: util.User
	(*Role)(nil),                      // 11: util.Role
	(*JobMeta)(nil),                   // 12: util.JobMeta
	(*VirtualClusterMeta)(nil),        // 13: util.VirtualClusterMeta
	(*FileMetaData)(nil),              // 14: util.FileMetaData
	(*rm.VirtualClusterSizeSpec)(nil), // 15: rm.VirtualClusterSizeSpec
	(*Share)(nil),                     // 16: util.Share
	(*Function)(nil),                  // 17: util.Function
	(*Connection)(nil),                // 18: util.Connection
	(*NetworkPolicy)(nil),             // 19: util.NetworkPolicy
	(*Index)(nil),                     // 20: util.Index
}
var file_util_metadata_entity_proto_depIdxs = []int32{
	3,  // 0: util.Entity.identifier:type_name -> util.ObjectIdentifier
	4,  // 1: util.Entity.creator_type:type_name -> util.PrincipalType
	5,  // 2: util.Entity.properties:type_name -> util.Property
	6,  // 3: util.Entity.state:type_name -> util.ObjectState.Type
	0,  // 4: util.Entity.category:type_name -> util.Entity.Category
	7,  // 5: util.Entity.workspace:type_name -> util.Workspace
	8,  // 6: util.Entity.schema:type_name -> util.Schema
	9,  // 7: util.Entity.table:type_name -> util.TableMeta
	10, // 8: util.Entity.user:type_name -> util.User
	11, // 9: util.Entity.role:type_name -> util.Role
	12, // 10: util.Entity.job:type_name -> util.JobMeta
	13, // 11: util.Entity.virtual_cluster:type_name -> util.VirtualClusterMeta
	14, // 12: util.Entity.file:type_name -> util.FileMetaData
	15, // 13: util.Entity.virtual_cluster_size_spec:type_name -> rm.VirtualClusterSizeSpec
	16, // 14: util.Entity.share:type_name -> util.Share
	17, // 15: util.Entity.function:type_name -> util.Function
	18, // 16: util.Entity.connection:type_name -> util.Connection
	19, // 17: util.Entity.network_policy:type_name -> util.NetworkPolicy
	20, // 18: util.Entity.index:type_name -> util.Index
	1,  // 19: util.EntityList.entities:type_name -> util.Entity
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_util_metadata_entity_proto_init() }
func file_util_metadata_entity_proto_init() {
	if File_util_metadata_entity_proto != nil {
		return
	}
	file_util_object_identifier_proto_init()
	file_util_workspace_meta_proto_init()
	file_util_schema_proto_init()
	file_util_table_common_proto_init()
	file_util_table_meta_proto_init()
	file_util_account_proto_init()
	file_util_role_meta_proto_init()
	file_util_job_meta_proto_init()
	file_util_property_proto_init()
	file_util_virtual_cluster_meta_proto_init()
	file_util_file_meta_data_proto_init()
	file_util_share_meta_proto_init()
	file_util_function_meta_proto_init()
	file_util_connection_meta_proto_init()
	file_util_network_policy_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_util_metadata_entity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_metadata_entity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_util_metadata_entity_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Entity_Workspace)(nil),
		(*Entity_Schema)(nil),
		(*Entity_Table)(nil),
		(*Entity_User)(nil),
		(*Entity_Role)(nil),
		(*Entity_Job)(nil),
		(*Entity_VirtualCluster)(nil),
		(*Entity_File)(nil),
		(*Entity_VirtualClusterSizeSpec)(nil),
		(*Entity_Share)(nil),
		(*Entity_Function)(nil),
		(*Entity_Connection)(nil),
		(*Entity_NetworkPolicy)(nil),
		(*Entity_Index)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_util_metadata_entity_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_util_metadata_entity_proto_goTypes,
		DependencyIndexes: file_util_metadata_entity_proto_depIdxs,
		EnumInfos:         file_util_metadata_entity_proto_enumTypes,
		MessageInfos:      file_util_metadata_entity_proto_msgTypes,
	}.Build()
	File_util_metadata_entity_proto = out.File
	file_util_metadata_entity_proto_rawDesc = nil
	file_util_metadata_entity_proto_goTypes = nil
	file_util_metadata_entity_proto_depIdxs = nil
}

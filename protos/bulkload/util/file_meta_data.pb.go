// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: util/file_meta_data.proto

package util

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileType int32

const (
	FileType_UNKNOWN_FILE FileType = 0
	FileType_DATA_FILE    FileType = 1
	FileType_DELTA_FILE   FileType = 2
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "UNKNOWN_FILE",
		1: "DATA_FILE",
		2: "DELTA_FILE",
	}
	FileType_value = map[string]int32{
		"UNKNOWN_FILE": 0,
		"DATA_FILE":    1,
		"DELTA_FILE":   2,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_util_file_meta_data_proto_enumTypes[0].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_util_file_meta_data_proto_enumTypes[0]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_util_file_meta_data_proto_rawDescGZIP(), []int{0}
}

type BlockInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Length uint64 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"` // other block meta of file
}

func (x *BlockInfo) Reset() {
	*x = BlockInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_file_meta_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockInfo) ProtoMessage() {}

func (x *BlockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_util_file_meta_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockInfo.ProtoReflect.Descriptor instead.
func (*BlockInfo) Descriptor() ([]byte, []int) {
	return file_util_file_meta_data_proto_rawDescGZIP(), []int{0}
}

func (x *BlockInfo) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *BlockInfo) GetLength() uint64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type DataLayout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// footer offset range
	Footer *BlockInfo `protobuf:"bytes,1,opt,name=footer,proto3" json:"footer,omitempty"`
	// block (parquet row group or orc stripe) offset range
	Blocks []*BlockInfo `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
	// bucket:[blocks]
	// For a partitioned table, there might be multiple buckets
	// with same bucket_id, but fall into different partitions.
	Buckets []*BucketInfo `protobuf:"bytes,3,rep,name=buckets,proto3" json:"buckets,omitempty"`
	// A set of values of virtual columns in the file.
	ValueInfo []*VirtualValueInfo `protobuf:"bytes,4,rep,name=value_info,json=valueInfo,proto3" json:"value_info,omitempty"`
	// Number of rows to limit a parquet page or orc row group.
	RowIndexStride *int32 `protobuf:"varint,5,opt,name=row_index_stride,json=rowIndexStride,proto3,oneof" json:"row_index_stride,omitempty"`
	// Number of rows per block (parquet row group or orc stripe)
	BlockRowCounts []int64 `protobuf:"varint,6,rep,packed,name=block_row_counts,json=blockRowCounts,proto3" json:"block_row_counts,omitempty"` // other organization info of file
}

func (x *DataLayout) Reset() {
	*x = DataLayout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_file_meta_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataLayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataLayout) ProtoMessage() {}

func (x *DataLayout) ProtoReflect() protoreflect.Message {
	mi := &file_util_file_meta_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataLayout.ProtoReflect.Descriptor instead.
func (*DataLayout) Descriptor() ([]byte, []int) {
	return file_util_file_meta_data_proto_rawDescGZIP(), []int{1}
}

func (x *DataLayout) GetFooter() *BlockInfo {
	if x != nil {
		return x.Footer
	}
	return nil
}

func (x *DataLayout) GetBlocks() []*BlockInfo {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *DataLayout) GetBuckets() []*BucketInfo {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *DataLayout) GetValueInfo() []*VirtualValueInfo {
	if x != nil {
		return x.ValueInfo
	}
	return nil
}

func (x *DataLayout) GetRowIndexStride() int32 {
	if x != nil && x.RowIndexStride != nil {
		return *x.RowIndexStride
	}
	return 0
}

func (x *DataLayout) GetBlockRowCounts() []int64 {
	if x != nil {
		return x.BlockRowCounts
	}
	return nil
}

type ExtendedMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyValue map[string]string `protobuf:"bytes,1,rep,name=key_value,json=keyValue,proto3" json:"key_value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ExtendedMetaData) Reset() {
	*x = ExtendedMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_file_meta_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtendedMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendedMetaData) ProtoMessage() {}

func (x *ExtendedMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_util_file_meta_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendedMetaData.ProtoReflect.Descriptor instead.
func (*ExtendedMetaData) Descriptor() ([]byte, []int) {
	return file_util_file_meta_data_proto_rawDescGZIP(), []int{2}
}

func (x *ExtendedMetaData) GetKeyValue() map[string]string {
	if x != nil {
		return x.KeyValue
	}
	return nil
}

type FileMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath         string            `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	FileFormat       FileFormatType    `protobuf:"varint,2,opt,name=file_format,json=fileFormat,proto3,enum=util.FileFormatType" json:"file_format,omitempty"`
	FileType         FileType          `protobuf:"varint,3,opt,name=file_type,json=fileType,proto3,enum=util.FileType" json:"file_type,omitempty"`
	FileSliceId      int64             `protobuf:"varint,4,opt,name=file_slice_id,json=fileSliceId,proto3" json:"file_slice_id,omitempty"`
	FileSliceVersion int64             `protobuf:"varint,5,opt,name=file_slice_version,json=fileSliceVersion,proto3" json:"file_slice_version,omitempty"`
	CompactionLevel  int32             `protobuf:"varint,6,opt,name=compaction_level,json=compactionLevel,proto3" json:"compaction_level,omitempty"`
	ClusterSpecId    *uint32           `protobuf:"varint,7,opt,name=cluster_spec_id,json=clusterSpecId,proto3,oneof" json:"cluster_spec_id,omitempty"`            // TableMeta.cluster_info_spec.spec_id
	SortOrderSpecId  *uint32           `protobuf:"varint,8,opt,name=sort_order_spec_id,json=sortOrderSpecId,proto3,oneof" json:"sort_order_spec_id,omitempty"`    // TableMeta.sort_order_spec.spec_id
	PrimaryKeySpecId *uint32           `protobuf:"varint,9,opt,name=primary_key_spec_id,json=primaryKeySpecId,proto3,oneof" json:"primary_key_spec_id,omitempty"` // TableMeta.primary_key_spec.spec_id
	Layout           *DataLayout       `protobuf:"bytes,10,opt,name=layout,proto3" json:"layout,omitempty"`
	ExtendedMetadata *ExtendedMetaData `protobuf:"bytes,11,opt,name=extended_metadata,json=extendedMetadata,proto3" json:"extended_metadata,omitempty"`
	// file level statistics
	Stats *StatsData `protobuf:"bytes,16,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *FileMetaData) Reset() {
	*x = FileMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_file_meta_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetaData) ProtoMessage() {}

func (x *FileMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_util_file_meta_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetaData.ProtoReflect.Descriptor instead.
func (*FileMetaData) Descriptor() ([]byte, []int) {
	return file_util_file_meta_data_proto_rawDescGZIP(), []int{3}
}

func (x *FileMetaData) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileMetaData) GetFileFormat() FileFormatType {
	if x != nil {
		return x.FileFormat
	}
	return FileFormatType_TEXT
}

func (x *FileMetaData) GetFileType() FileType {
	if x != nil {
		return x.FileType
	}
	return FileType_UNKNOWN_FILE
}

func (x *FileMetaData) GetFileSliceId() int64 {
	if x != nil {
		return x.FileSliceId
	}
	return 0
}

func (x *FileMetaData) GetFileSliceVersion() int64 {
	if x != nil {
		return x.FileSliceVersion
	}
	return 0
}

func (x *FileMetaData) GetCompactionLevel() int32 {
	if x != nil {
		return x.CompactionLevel
	}
	return 0
}

func (x *FileMetaData) GetClusterSpecId() uint32 {
	if x != nil && x.ClusterSpecId != nil {
		return *x.ClusterSpecId
	}
	return 0
}

func (x *FileMetaData) GetSortOrderSpecId() uint32 {
	if x != nil && x.SortOrderSpecId != nil {
		return *x.SortOrderSpecId
	}
	return 0
}

func (x *FileMetaData) GetPrimaryKeySpecId() uint32 {
	if x != nil && x.PrimaryKeySpecId != nil {
		return *x.PrimaryKeySpecId
	}
	return 0
}

func (x *FileMetaData) GetLayout() *DataLayout {
	if x != nil {
		return x.Layout
	}
	return nil
}

func (x *FileMetaData) GetExtendedMetadata() *ExtendedMetaData {
	if x != nil {
		return x.ExtendedMetadata
	}
	return nil
}

func (x *FileMetaData) GetStats() *StatsData {
	if x != nil {
		return x.Stats
	}
	return nil
}

var File_util_file_meta_data_proto protoreflect.FileDescriptor

var file_util_file_meta_data_proto_rawDesc = []byte{
	0x0a, 0x19, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x74, 0x69,
	0x6c, 0x1a, 0x16, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x75, 0x74, 0x69, 0x6c, 0x2f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x75,
	0x74, 0x69, 0x6c, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x09,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0xaf, 0x02, 0x0a, 0x0a, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65,
	0x72, 0x12, 0x27, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x74,
	0x69, 0x6c, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a,
	0x10, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x6f, 0x77, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x53, 0x74, 0x72, 0x69, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x10,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x77,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x10,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x41, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x3b, 0x0a, 0x0d, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xf8, 0x04, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x35,
	0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x6c, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73,
	0x6c, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x2b, 0x0a, 0x0f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x12,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x0f, 0x73, 0x6f, 0x72, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x32,
	0x0a, 0x13, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x70,
	0x65, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x10, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x65, 0x63, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x43, 0x0a, 0x11,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x69, 0x64, 0x42, 0x15, 0x0a, 0x13,
	0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x69, 0x64, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x69, 0x64, 0x2a, 0x3b, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x4c, 0x54,
	0x41, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x02, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x7a, 0x65, 0x74, 0x74,
	0x61, 0x2f, 0x67, 0x6f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x7a, 0x65, 0x74, 0x74, 0x61, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x75,
	0x74, 0x69, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_util_file_meta_data_proto_rawDescOnce sync.Once
	file_util_file_meta_data_proto_rawDescData = file_util_file_meta_data_proto_rawDesc
)

func file_util_file_meta_data_proto_rawDescGZIP() []byte {
	file_util_file_meta_data_proto_rawDescOnce.Do(func() {
		file_util_file_meta_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_util_file_meta_data_proto_rawDescData)
	})
	return file_util_file_meta_data_proto_rawDescData
}

var file_util_file_meta_data_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_util_file_meta_data_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_util_file_meta_data_proto_goTypes = []interface{}{
	(FileType)(0),            // 0: util.FileType
	(*BlockInfo)(nil),        // 1: util.BlockInfo
	(*DataLayout)(nil),       // 2: util.DataLayout
	(*ExtendedMetaData)(nil), // 3: util.ExtendedMetaData
	(*FileMetaData)(nil),     // 4: util.FileMetaData
	nil,                      // 5: util.ExtendedMetaData.KeyValueEntry
	(*BucketInfo)(nil),       // 6: util.BucketInfo
	(*VirtualValueInfo)(nil), // 7: util.VirtualValueInfo
	(FileFormatType)(0),      // 8: util.FileFormatType
	(*StatsData)(nil),        // 9: util.StatsData
}
var file_util_file_meta_data_proto_depIdxs = []int32{
	1,  // 0: util.DataLayout.footer:type_name -> util.BlockInfo
	1,  // 1: util.DataLayout.blocks:type_name -> util.BlockInfo
	6,  // 2: util.DataLayout.buckets:type_name -> util.BucketInfo
	7,  // 3: util.DataLayout.value_info:type_name -> util.VirtualValueInfo
	5,  // 4: util.ExtendedMetaData.key_value:type_name -> util.ExtendedMetaData.KeyValueEntry
	8,  // 5: util.FileMetaData.file_format:type_name -> util.FileFormatType
	0,  // 6: util.FileMetaData.file_type:type_name -> util.FileType
	2,  // 7: util.FileMetaData.layout:type_name -> util.DataLayout
	3,  // 8: util.FileMetaData.extended_metadata:type_name -> util.ExtendedMetaData
	9,  // 9: util.FileMetaData.stats:type_name -> util.StatsData
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_util_file_meta_data_proto_init() }
func file_util_file_meta_data_proto_init() {
	if File_util_file_meta_data_proto != nil {
		return
	}
	file_util_bucket_info_proto_init()
	file_util_file_format_type_proto_init()
	file_util_statistics_proto_init()
	file_util_virtual_value_info_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_util_file_meta_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_file_meta_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataLayout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_file_meta_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtendedMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_file_meta_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_util_file_meta_data_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_util_file_meta_data_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_util_file_meta_data_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_util_file_meta_data_proto_goTypes,
		DependencyIndexes: file_util_file_meta_data_proto_depIdxs,
		EnumInfos:         file_util_file_meta_data_proto_enumTypes,
		MessageInfos:      file_util_file_meta_data_proto_msgTypes,
	}.Build()
	File_util_file_meta_data_proto = out.File
	file_util_file_meta_data_proto_rawDesc = nil
	file_util_file_meta_data_proto_goTypes = nil
	file_util_file_meta_data_proto_depIdxs = nil
}

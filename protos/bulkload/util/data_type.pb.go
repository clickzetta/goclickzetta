// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: util/data_type.proto

package util

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataTypeCategory int32

const (
	DataTypeCategory_NONE                DataTypeCategory = 0
	DataTypeCategory_INT8                DataTypeCategory = 1
	DataTypeCategory_INT16               DataTypeCategory = 2
	DataTypeCategory_INT32               DataTypeCategory = 3
	DataTypeCategory_INT64               DataTypeCategory = 4
	DataTypeCategory_FLOAT32             DataTypeCategory = 5
	DataTypeCategory_FLOAT64             DataTypeCategory = 6
	DataTypeCategory_DECIMAL             DataTypeCategory = 7
	DataTypeCategory_BOOLEAN             DataTypeCategory = 8
	DataTypeCategory_CHAR                DataTypeCategory = 9
	DataTypeCategory_VARCHAR             DataTypeCategory = 10
	DataTypeCategory_STRING              DataTypeCategory = 11
	DataTypeCategory_BINARY              DataTypeCategory = 12
	DataTypeCategory_DATE                DataTypeCategory = 13
	DataTypeCategory_TIMESTAMP_LTZ       DataTypeCategory = 14
	DataTypeCategory_INTERVAL_YEAR_MONTH DataTypeCategory = 15
	DataTypeCategory_INTERVAL_DAY_TIME   DataTypeCategory = 16
	DataTypeCategory_BITMAP              DataTypeCategory = 50
	DataTypeCategory_ARRAY               DataTypeCategory = 100
	DataTypeCategory_MAP                 DataTypeCategory = 101
	DataTypeCategory_STRUCT              DataTypeCategory = 102
	DataTypeCategory_FUNCTION_TYPE       DataTypeCategory = 103
	DataTypeCategory_VOID                DataTypeCategory = 200
)

// Enum value maps for DataTypeCategory.
var (
	DataTypeCategory_name = map[int32]string{
		0:   "NONE",
		1:   "INT8",
		2:   "INT16",
		3:   "INT32",
		4:   "INT64",
		5:   "FLOAT32",
		6:   "FLOAT64",
		7:   "DECIMAL",
		8:   "BOOLEAN",
		9:   "CHAR",
		10:  "VARCHAR",
		11:  "STRING",
		12:  "BINARY",
		13:  "DATE",
		14:  "TIMESTAMP_LTZ",
		15:  "INTERVAL_YEAR_MONTH",
		16:  "INTERVAL_DAY_TIME",
		50:  "BITMAP",
		100: "ARRAY",
		101: "MAP",
		102: "STRUCT",
		103: "FUNCTION_TYPE",
		200: "VOID",
	}
	DataTypeCategory_value = map[string]int32{
		"NONE":                0,
		"INT8":                1,
		"INT16":               2,
		"INT32":               3,
		"INT64":               4,
		"FLOAT32":             5,
		"FLOAT64":             6,
		"DECIMAL":             7,
		"BOOLEAN":             8,
		"CHAR":                9,
		"VARCHAR":             10,
		"STRING":              11,
		"BINARY":              12,
		"DATE":                13,
		"TIMESTAMP_LTZ":       14,
		"INTERVAL_YEAR_MONTH": 15,
		"INTERVAL_DAY_TIME":   16,
		"BITMAP":              50,
		"ARRAY":               100,
		"MAP":                 101,
		"STRUCT":              102,
		"FUNCTION_TYPE":       103,
		"VOID":                200,
	}
)

func (x DataTypeCategory) Enum() *DataTypeCategory {
	p := new(DataTypeCategory)
	*p = x
	return p
}

func (x DataTypeCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataTypeCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_util_data_type_proto_enumTypes[0].Descriptor()
}

func (DataTypeCategory) Type() protoreflect.EnumType {
	return &file_util_data_type_proto_enumTypes[0]
}

func (x DataTypeCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataTypeCategory.Descriptor instead.
func (DataTypeCategory) EnumDescriptor() ([]byte, []int) {
	return file_util_data_type_proto_rawDescGZIP(), []int{0}
}

type IntervalUnit int32

const (
	IntervalUnit_NONE_INTERVAL_UNIT IntervalUnit = 0
	IntervalUnit_YEAR               IntervalUnit = 1
	IntervalUnit_MONTH              IntervalUnit = 2
	IntervalUnit_DAY                IntervalUnit = 3
	IntervalUnit_HOUR               IntervalUnit = 4
	IntervalUnit_MINUTE             IntervalUnit = 5
	IntervalUnit_SECOND             IntervalUnit = 6
)

// Enum value maps for IntervalUnit.
var (
	IntervalUnit_name = map[int32]string{
		0: "NONE_INTERVAL_UNIT",
		1: "YEAR",
		2: "MONTH",
		3: "DAY",
		4: "HOUR",
		5: "MINUTE",
		6: "SECOND",
	}
	IntervalUnit_value = map[string]int32{
		"NONE_INTERVAL_UNIT": 0,
		"YEAR":               1,
		"MONTH":              2,
		"DAY":                3,
		"HOUR":               4,
		"MINUTE":             5,
		"SECOND":             6,
	}
)

func (x IntervalUnit) Enum() *IntervalUnit {
	p := new(IntervalUnit)
	*p = x
	return p
}

func (x IntervalUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntervalUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_util_data_type_proto_enumTypes[1].Descriptor()
}

func (IntervalUnit) Type() protoreflect.EnumType {
	return &file_util_data_type_proto_enumTypes[1]
}

func (x IntervalUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntervalUnit.Descriptor instead.
func (IntervalUnit) EnumDescriptor() ([]byte, []int) {
	return file_util_data_type_proto_rawDescGZIP(), []int{1}
}

type TimestampUnit int32

const (
	TimestampUnit_SECONDS      TimestampUnit = 0
	TimestampUnit_MILLISECONDS TimestampUnit = 3
	TimestampUnit_MICROSECONDS TimestampUnit = 6
	TimestampUnit_NANOSECONDS  TimestampUnit = 9
)

// Enum value maps for TimestampUnit.
var (
	TimestampUnit_name = map[int32]string{
		0: "SECONDS",
		3: "MILLISECONDS",
		6: "MICROSECONDS",
		9: "NANOSECONDS",
	}
	TimestampUnit_value = map[string]int32{
		"SECONDS":      0,
		"MILLISECONDS": 3,
		"MICROSECONDS": 6,
		"NANOSECONDS":  9,
	}
)

func (x TimestampUnit) Enum() *TimestampUnit {
	p := new(TimestampUnit)
	*p = x
	return p
}

func (x TimestampUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimestampUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_util_data_type_proto_enumTypes[2].Descriptor()
}

func (TimestampUnit) Type() protoreflect.EnumType {
	return &file_util_data_type_proto_enumTypes[2]
}

func (x TimestampUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimestampUnit.Descriptor instead.
func (TimestampUnit) EnumDescriptor() ([]byte, []int) {
	return file_util_data_type_proto_rawDescGZIP(), []int{2}
}

type CharTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint64 `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *CharTypeInfo) Reset() {
	*x = CharTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_data_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharTypeInfo) ProtoMessage() {}

func (x *CharTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_util_data_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharTypeInfo.ProtoReflect.Descriptor instead.
func (*CharTypeInfo) Descriptor() ([]byte, []int) {
	return file_util_data_type_proto_rawDescGZIP(), []int{0}
}

func (x *CharTypeInfo) GetLength() uint64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type VarCharTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint64 `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *VarCharTypeInfo) Reset() {
	*x = VarCharTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_data_type_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VarCharTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VarCharTypeInfo) ProtoMessage() {}

func (x *VarCharTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_util_data_type_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VarCharTypeInfo.ProtoReflect.Descriptor instead.
func (*VarCharTypeInfo) Descriptor() ([]byte, []int) {
	return file_util_data_type_proto_rawDescGZIP(), []int{1}
}

func (x *VarCharTypeInfo) GetLength() uint64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type DecimalTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Precision uint64 `protobuf:"varint,1,opt,name=precision,proto3" json:"precision,omitempty"`
	Scale     uint64 `protobuf:"varint,2,opt,name=scale,proto3" json:"scale,omitempty"`
}

func (x *DecimalTypeInfo) Reset() {
	*x = DecimalTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_data_type_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecimalTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecimalTypeInfo) ProtoMessage() {}

func (x *DecimalTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_util_data_type_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecimalTypeInfo.ProtoReflect.Descriptor instead.
func (*DecimalTypeInfo) Descriptor() ([]byte, []int) {
	return file_util_data_type_proto_rawDescGZIP(), []int{2}
}

func (x *DecimalTypeInfo) GetPrecision() uint64 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *DecimalTypeInfo) GetScale() uint64 {
	if x != nil {
		return x.Scale
	}
	return 0
}

type IntervalDayTimeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      IntervalUnit  `protobuf:"varint,1,opt,name=from,proto3,enum=util.IntervalUnit" json:"from,omitempty"`
	To        IntervalUnit  `protobuf:"varint,2,opt,name=to,proto3,enum=util.IntervalUnit" json:"to,omitempty"`
	Precision TimestampUnit `protobuf:"varint,3,opt,name=precision,proto3,enum=util.TimestampUnit" json:"precision,omitempty"`
}

func (x *IntervalDayTimeInfo) Reset() {
	*x = IntervalDayTimeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_data_type_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntervalDayTimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntervalDayTimeInfo) ProtoMessage() {}

func (x *IntervalDayTimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_util_data_type_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntervalDayTimeInfo.ProtoReflect.Descriptor instead.
func (*IntervalDayTimeInfo) Descriptor() ([]byte, []int) {
	return file_util_data_type_proto_rawDescGZIP(), []int{3}
}

func (x *IntervalDayTimeInfo) GetFrom() IntervalUnit {
	if x != nil {
		return x.From
	}
	return IntervalUnit_NONE_INTERVAL_UNIT
}

func (x *IntervalDayTimeInfo) GetTo() IntervalUnit {
	if x != nil {
		return x.To
	}
	return IntervalUnit_NONE_INTERVAL_UNIT
}

func (x *IntervalDayTimeInfo) GetPrecision() TimestampUnit {
	if x != nil {
		return x.Precision
	}
	return TimestampUnit_SECONDS
}

type IntervalYearMonthInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From IntervalUnit `protobuf:"varint,1,opt,name=from,proto3,enum=util.IntervalUnit" json:"from,omitempty"`
	To   IntervalUnit `protobuf:"varint,2,opt,name=to,proto3,enum=util.IntervalUnit" json:"to,omitempty"`
}

func (x *IntervalYearMonthInfo) Reset() {
	*x = IntervalYearMonthInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_data_type_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntervalYearMonthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntervalYearMonthInfo) ProtoMessage() {}

func (x *IntervalYearMonthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_util_data_type_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntervalYearMonthInfo.ProtoReflect.Descriptor instead.
func (*IntervalYearMonthInfo) Descriptor() ([]byte, []int) {
	return file_util_data_type_proto_rawDescGZIP(), []int{4}
}

func (x *IntervalYearMonthInfo) GetFrom() IntervalUnit {
	if x != nil {
		return x.From
	}
	return IntervalUnit_NONE_INTERVAL_UNIT
}

func (x *IntervalYearMonthInfo) GetTo() IntervalUnit {
	if x != nil {
		return x.To
	}
	return IntervalUnit_NONE_INTERVAL_UNIT
}

type ArrayTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ElementType *DataType `protobuf:"bytes,1,opt,name=elementType,proto3" json:"elementType,omitempty"`
}

func (x *ArrayTypeInfo) Reset() {
	*x = ArrayTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_data_type_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayTypeInfo) ProtoMessage() {}

func (x *ArrayTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_util_data_type_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayTypeInfo.ProtoReflect.Descriptor instead.
func (*ArrayTypeInfo) Descriptor() ([]byte, []int) {
	return file_util_data_type_proto_rawDescGZIP(), []int{5}
}

func (x *ArrayTypeInfo) GetElementType() *DataType {
	if x != nil {
		return x.ElementType
	}
	return nil
}

type MapTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyType   *DataType `protobuf:"bytes,1,opt,name=keyType,proto3" json:"keyType,omitempty"`
	ValueType *DataType `protobuf:"bytes,2,opt,name=valueType,proto3" json:"valueType,omitempty"`
}

func (x *MapTypeInfo) Reset() {
	*x = MapTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_data_type_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapTypeInfo) ProtoMessage() {}

func (x *MapTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_util_data_type_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapTypeInfo.ProtoReflect.Descriptor instead.
func (*MapTypeInfo) Descriptor() ([]byte, []int) {
	return file_util_data_type_proto_rawDescGZIP(), []int{6}
}

func (x *MapTypeInfo) GetKeyType() *DataType {
	if x != nil {
		return x.KeyType
	}
	return nil
}

func (x *MapTypeInfo) GetValueType() *DataType {
	if x != nil {
		return x.ValueType
	}
	return nil
}

type StructTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*StructTypeInfo_Field `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *StructTypeInfo) Reset() {
	*x = StructTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_data_type_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructTypeInfo) ProtoMessage() {}

func (x *StructTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_util_data_type_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructTypeInfo.ProtoReflect.Descriptor instead.
func (*StructTypeInfo) Descriptor() ([]byte, []int) {
	return file_util_data_type_proto_rawDescGZIP(), []int{7}
}

func (x *StructTypeInfo) GetFields() []*StructTypeInfo_Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type FunctionTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Args       []*DataType `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	ReturnType *DataType   `protobuf:"bytes,2,opt,name=return_type,json=returnType,proto3" json:"return_type,omitempty"`
}

func (x *FunctionTypeInfo) Reset() {
	*x = FunctionTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_data_type_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionTypeInfo) ProtoMessage() {}

func (x *FunctionTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_util_data_type_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionTypeInfo.ProtoReflect.Descriptor instead.
func (*FunctionTypeInfo) Descriptor() ([]byte, []int) {
	return file_util_data_type_proto_rawDescGZIP(), []int{8}
}

func (x *FunctionTypeInfo) GetArgs() []*DataType {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *FunctionTypeInfo) GetReturnType() *DataType {
	if x != nil {
		return x.ReturnType
	}
	return nil
}

type TimestampInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TsUnit TimestampUnit `protobuf:"varint,1,opt,name=tsUnit,proto3,enum=util.TimestampUnit" json:"tsUnit,omitempty"`
}

func (x *TimestampInfo) Reset() {
	*x = TimestampInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_data_type_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimestampInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimestampInfo) ProtoMessage() {}

func (x *TimestampInfo) ProtoReflect() protoreflect.Message {
	mi := &file_util_data_type_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimestampInfo.ProtoReflect.Descriptor instead.
func (*TimestampInfo) Descriptor() ([]byte, []int) {
	return file_util_data_type_proto_rawDescGZIP(), []int{9}
}

func (x *TimestampInfo) GetTsUnit() TimestampUnit {
	if x != nil {
		return x.TsUnit
	}
	return TimestampUnit_SECONDS
}

type DataType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category DataTypeCategory `protobuf:"varint,1,opt,name=category,proto3,enum=util.DataTypeCategory" json:"category,omitempty"`
	Nullable bool             `protobuf:"varint,2,opt,name=nullable,proto3" json:"nullable,omitempty"`
	FieldId  uint32           `protobuf:"varint,11,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	// Types that are assignable to Info:
	//
	//	*DataType_CharTypeInfo
	//	*DataType_VarCharTypeInfo
	//	*DataType_DecimalTypeInfo
	//	*DataType_ArrayTypeInfo
	//	*DataType_MapTypeInfo
	//	*DataType_StructTypeInfo
	//	*DataType_IntervalDayTimeInfo
	//	*DataType_IntervalYearMonthInfo
	//	*DataType_TimestampInfo
	//	*DataType_FunctionInfo
	Info isDataType_Info `protobuf_oneof:"info"`
}

func (x *DataType) Reset() {
	*x = DataType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_data_type_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataType) ProtoMessage() {}

func (x *DataType) ProtoReflect() protoreflect.Message {
	mi := &file_util_data_type_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataType.ProtoReflect.Descriptor instead.
func (*DataType) Descriptor() ([]byte, []int) {
	return file_util_data_type_proto_rawDescGZIP(), []int{10}
}

func (x *DataType) GetCategory() DataTypeCategory {
	if x != nil {
		return x.Category
	}
	return DataTypeCategory_NONE
}

func (x *DataType) GetNullable() bool {
	if x != nil {
		return x.Nullable
	}
	return false
}

func (x *DataType) GetFieldId() uint32 {
	if x != nil {
		return x.FieldId
	}
	return 0
}

func (m *DataType) GetInfo() isDataType_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *DataType) GetCharTypeInfo() *CharTypeInfo {
	if x, ok := x.GetInfo().(*DataType_CharTypeInfo); ok {
		return x.CharTypeInfo
	}
	return nil
}

func (x *DataType) GetVarCharTypeInfo() *VarCharTypeInfo {
	if x, ok := x.GetInfo().(*DataType_VarCharTypeInfo); ok {
		return x.VarCharTypeInfo
	}
	return nil
}

func (x *DataType) GetDecimalTypeInfo() *DecimalTypeInfo {
	if x, ok := x.GetInfo().(*DataType_DecimalTypeInfo); ok {
		return x.DecimalTypeInfo
	}
	return nil
}

func (x *DataType) GetArrayTypeInfo() *ArrayTypeInfo {
	if x, ok := x.GetInfo().(*DataType_ArrayTypeInfo); ok {
		return x.ArrayTypeInfo
	}
	return nil
}

func (x *DataType) GetMapTypeInfo() *MapTypeInfo {
	if x, ok := x.GetInfo().(*DataType_MapTypeInfo); ok {
		return x.MapTypeInfo
	}
	return nil
}

func (x *DataType) GetStructTypeInfo() *StructTypeInfo {
	if x, ok := x.GetInfo().(*DataType_StructTypeInfo); ok {
		return x.StructTypeInfo
	}
	return nil
}

func (x *DataType) GetIntervalDayTimeInfo() *IntervalDayTimeInfo {
	if x, ok := x.GetInfo().(*DataType_IntervalDayTimeInfo); ok {
		return x.IntervalDayTimeInfo
	}
	return nil
}

func (x *DataType) GetIntervalYearMonthInfo() *IntervalYearMonthInfo {
	if x, ok := x.GetInfo().(*DataType_IntervalYearMonthInfo); ok {
		return x.IntervalYearMonthInfo
	}
	return nil
}

func (x *DataType) GetTimestampInfo() *TimestampInfo {
	if x, ok := x.GetInfo().(*DataType_TimestampInfo); ok {
		return x.TimestampInfo
	}
	return nil
}

func (x *DataType) GetFunctionInfo() *FunctionTypeInfo {
	if x, ok := x.GetInfo().(*DataType_FunctionInfo); ok {
		return x.FunctionInfo
	}
	return nil
}

type isDataType_Info interface {
	isDataType_Info()
}

type DataType_CharTypeInfo struct {
	CharTypeInfo *CharTypeInfo `protobuf:"bytes,3,opt,name=charTypeInfo,proto3,oneof"`
}

type DataType_VarCharTypeInfo struct {
	VarCharTypeInfo *VarCharTypeInfo `protobuf:"bytes,4,opt,name=varCharTypeInfo,proto3,oneof"`
}

type DataType_DecimalTypeInfo struct {
	DecimalTypeInfo *DecimalTypeInfo `protobuf:"bytes,5,opt,name=decimalTypeInfo,proto3,oneof"`
}

type DataType_ArrayTypeInfo struct {
	ArrayTypeInfo *ArrayTypeInfo `protobuf:"bytes,6,opt,name=arrayTypeInfo,proto3,oneof"`
}

type DataType_MapTypeInfo struct {
	MapTypeInfo *MapTypeInfo `protobuf:"bytes,7,opt,name=mapTypeInfo,proto3,oneof"`
}

type DataType_StructTypeInfo struct {
	StructTypeInfo *StructTypeInfo `protobuf:"bytes,8,opt,name=structTypeInfo,proto3,oneof"`
}

type DataType_IntervalDayTimeInfo struct {
	IntervalDayTimeInfo *IntervalDayTimeInfo `protobuf:"bytes,9,opt,name=interval_day_time_info,json=intervalDayTimeInfo,proto3,oneof"`
}

type DataType_IntervalYearMonthInfo struct {
	IntervalYearMonthInfo *IntervalYearMonthInfo `protobuf:"bytes,10,opt,name=interval_year_month_info,json=intervalYearMonthInfo,proto3,oneof"`
}

type DataType_TimestampInfo struct {
	TimestampInfo *TimestampInfo `protobuf:"bytes,12,opt,name=timestamp_info,json=timestampInfo,proto3,oneof"`
}

type DataType_FunctionInfo struct {
	FunctionInfo *FunctionTypeInfo `protobuf:"bytes,13,opt,name=function_info,json=functionInfo,proto3,oneof"`
}

func (*DataType_CharTypeInfo) isDataType_Info() {}

func (*DataType_VarCharTypeInfo) isDataType_Info() {}

func (*DataType_DecimalTypeInfo) isDataType_Info() {}

func (*DataType_ArrayTypeInfo) isDataType_Info() {}

func (*DataType_MapTypeInfo) isDataType_Info() {}

func (*DataType_StructTypeInfo) isDataType_Info() {}

func (*DataType_IntervalDayTimeInfo) isDataType_Info() {}

func (*DataType_IntervalYearMonthInfo) isDataType_Info() {}

func (*DataType_TimestampInfo) isDataType_Info() {}

func (*DataType_FunctionInfo) isDataType_Info() {}

type StructTypeInfo_Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type *DataType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *StructTypeInfo_Field) Reset() {
	*x = StructTypeInfo_Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_data_type_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructTypeInfo_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructTypeInfo_Field) ProtoMessage() {}

func (x *StructTypeInfo_Field) ProtoReflect() protoreflect.Message {
	mi := &file_util_data_type_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructTypeInfo_Field.ProtoReflect.Descriptor instead.
func (*StructTypeInfo_Field) Descriptor() ([]byte, []int) {
	return file_util_data_type_proto_rawDescGZIP(), []int{7, 0}
}

func (x *StructTypeInfo_Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StructTypeInfo_Field) GetType() *DataType {
	if x != nil {
		return x.Type
	}
	return nil
}

var File_util_data_type_proto protoreflect.FileDescriptor

var file_util_data_type_proto_rawDesc = []byte{
	0x0a, 0x14, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x74, 0x69, 0x6c, 0x22, 0x26, 0x0a, 0x0c,
	0x43, 0x68, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x22, 0x29, 0x0a, 0x0f, 0x56, 0x61, 0x72, 0x43, 0x68, 0x61, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22,
	0x45, 0x0a, 0x0f, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x44, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x75,
	0x74, 0x69, 0x6c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x22, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x72,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x75, 0x74, 0x69, 0x6c, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e,
	0x69, 0x74, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a,
	0x15, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x22,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x02,
	0x74, 0x6f, 0x22, 0x41, 0x0a, 0x0d, 0x41, 0x72, 0x72, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x65, 0x0a, 0x0b, 0x4d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c,
	0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x85, 0x01, 0x0a,
	0x0e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x32, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x1a, 0x3f, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x67, 0x0a, 0x10, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x2f, 0x0a, 0x0b,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3c, 0x0a,
	0x0d, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b,
	0x0a, 0x06, 0x74, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55,
	0x6e, 0x69, 0x74, 0x52, 0x06, 0x74, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x98, 0x06, 0x0a, 0x08,
	0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x74, 0x69, 0x6c,
	0x2e, 0x43, 0x68, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x0c, 0x63, 0x68, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a,
	0x0f, 0x76, 0x61, 0x72, 0x43, 0x68, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x56, 0x61,
	0x72, 0x43, 0x68, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x0f, 0x76, 0x61, 0x72, 0x43, 0x68, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x41, 0x0a, 0x0f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x74, 0x69, 0x6c,
	0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x0f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0d, 0x61, 0x72, 0x72, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x00, 0x52, 0x0d, 0x61, 0x72, 0x72, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x35, 0x0a, 0x0b, 0x6d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x4d, 0x61, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x61, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x50, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x44, 0x61,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x56, 0x0a, 0x18, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x74,
	0x69, 0x6c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x15, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x3c, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x74, 0x69, 0x6c,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3d, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x06,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x2a, 0xc1, 0x02, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x54, 0x38, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e,
	0x54, 0x33, 0x32, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x04,
	0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x32, 0x10, 0x05, 0x12, 0x0b, 0x0a,
	0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x36, 0x34, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45,
	0x43, 0x49, 0x4d, 0x41, 0x4c, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f, 0x4f, 0x4c, 0x45,
	0x41, 0x4e, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x48, 0x41, 0x52, 0x10, 0x09, 0x12, 0x0b,
	0x0a, 0x07, 0x56, 0x41, 0x52, 0x43, 0x48, 0x41, 0x52, 0x10, 0x0a, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x49, 0x4e, 0x41, 0x52,
	0x59, 0x10, 0x0c, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x54, 0x45, 0x10, 0x0d, 0x12, 0x11, 0x0a,
	0x0d, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x5f, 0x4c, 0x54, 0x5a, 0x10, 0x0e,
	0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x59, 0x45, 0x41,
	0x52, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x0f, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x44, 0x41, 0x59, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x10,
	0x12, 0x0a, 0x0a, 0x06, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x10, 0x32, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x52, 0x52, 0x41, 0x59, 0x10, 0x64, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x50, 0x10, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x10, 0x66, 0x12, 0x11, 0x0a, 0x0d,
	0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x67, 0x12,
	0x09, 0x0a, 0x04, 0x56, 0x4f, 0x49, 0x44, 0x10, 0xc8, 0x01, 0x2a, 0x66, 0x0a, 0x0c, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x4f,
	0x4e, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x55, 0x4e, 0x49, 0x54,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x59, 0x45, 0x41, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x41, 0x59, 0x10, 0x03,
	0x12, 0x08, 0x0a, 0x04, 0x48, 0x4f, 0x55, 0x52, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x49,
	0x4e, 0x55, 0x54, 0x45, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44,
	0x10, 0x06, 0x2a, 0x51, 0x0a, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x53, 0x10, 0x00,
	0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x49, 0x4c, 0x4c, 0x49, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x53,
	0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x53, 0x45, 0x43, 0x4f, 0x4e,
	0x44, 0x53, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x41, 0x4e, 0x4f, 0x53, 0x45, 0x43, 0x4f,
	0x4e, 0x44, 0x53, 0x10, 0x09, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x7a, 0x65, 0x74, 0x74, 0x61, 0x2f, 0x67,
	0x6f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x7a, 0x65, 0x74, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x75, 0x74, 0x69, 0x6c,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_util_data_type_proto_rawDescOnce sync.Once
	file_util_data_type_proto_rawDescData = file_util_data_type_proto_rawDesc
)

func file_util_data_type_proto_rawDescGZIP() []byte {
	file_util_data_type_proto_rawDescOnce.Do(func() {
		file_util_data_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_util_data_type_proto_rawDescData)
	})
	return file_util_data_type_proto_rawDescData
}

var file_util_data_type_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_util_data_type_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_util_data_type_proto_goTypes = []interface{}{
	(DataTypeCategory)(0),         // 0: util.DataTypeCategory
	(IntervalUnit)(0),             // 1: util.IntervalUnit
	(TimestampUnit)(0),            // 2: util.TimestampUnit
	(*CharTypeInfo)(nil),          // 3: util.CharTypeInfo
	(*VarCharTypeInfo)(nil),       // 4: util.VarCharTypeInfo
	(*DecimalTypeInfo)(nil),       // 5: util.DecimalTypeInfo
	(*IntervalDayTimeInfo)(nil),   // 6: util.IntervalDayTimeInfo
	(*IntervalYearMonthInfo)(nil), // 7: util.IntervalYearMonthInfo
	(*ArrayTypeInfo)(nil),         // 8: util.ArrayTypeInfo
	(*MapTypeInfo)(nil),           // 9: util.MapTypeInfo
	(*StructTypeInfo)(nil),        // 10: util.StructTypeInfo
	(*FunctionTypeInfo)(nil),      // 11: util.FunctionTypeInfo
	(*TimestampInfo)(nil),         // 12: util.TimestampInfo
	(*DataType)(nil),              // 13: util.DataType
	(*StructTypeInfo_Field)(nil),  // 14: util.StructTypeInfo.Field
}
var file_util_data_type_proto_depIdxs = []int32{
	1,  // 0: util.IntervalDayTimeInfo.from:type_name -> util.IntervalUnit
	1,  // 1: util.IntervalDayTimeInfo.to:type_name -> util.IntervalUnit
	2,  // 2: util.IntervalDayTimeInfo.precision:type_name -> util.TimestampUnit
	1,  // 3: util.IntervalYearMonthInfo.from:type_name -> util.IntervalUnit
	1,  // 4: util.IntervalYearMonthInfo.to:type_name -> util.IntervalUnit
	13, // 5: util.ArrayTypeInfo.elementType:type_name -> util.DataType
	13, // 6: util.MapTypeInfo.keyType:type_name -> util.DataType
	13, // 7: util.MapTypeInfo.valueType:type_name -> util.DataType
	14, // 8: util.StructTypeInfo.fields:type_name -> util.StructTypeInfo.Field
	13, // 9: util.FunctionTypeInfo.args:type_name -> util.DataType
	13, // 10: util.FunctionTypeInfo.return_type:type_name -> util.DataType
	2,  // 11: util.TimestampInfo.tsUnit:type_name -> util.TimestampUnit
	0,  // 12: util.DataType.category:type_name -> util.DataTypeCategory
	3,  // 13: util.DataType.charTypeInfo:type_name -> util.CharTypeInfo
	4,  // 14: util.DataType.varCharTypeInfo:type_name -> util.VarCharTypeInfo
	5,  // 15: util.DataType.decimalTypeInfo:type_name -> util.DecimalTypeInfo
	8,  // 16: util.DataType.arrayTypeInfo:type_name -> util.ArrayTypeInfo
	9,  // 17: util.DataType.mapTypeInfo:type_name -> util.MapTypeInfo
	10, // 18: util.DataType.structTypeInfo:type_name -> util.StructTypeInfo
	6,  // 19: util.DataType.interval_day_time_info:type_name -> util.IntervalDayTimeInfo
	7,  // 20: util.DataType.interval_year_month_info:type_name -> util.IntervalYearMonthInfo
	12, // 21: util.DataType.timestamp_info:type_name -> util.TimestampInfo
	11, // 22: util.DataType.function_info:type_name -> util.FunctionTypeInfo
	13, // 23: util.StructTypeInfo.Field.type:type_name -> util.DataType
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_util_data_type_proto_init() }
func file_util_data_type_proto_init() {
	if File_util_data_type_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_util_data_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_data_type_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VarCharTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_data_type_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecimalTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_data_type_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntervalDayTimeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_data_type_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntervalYearMonthInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_data_type_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_data_type_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_data_type_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_data_type_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_data_type_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimestampInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_data_type_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_data_type_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructTypeInfo_Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_util_data_type_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*DataType_CharTypeInfo)(nil),
		(*DataType_VarCharTypeInfo)(nil),
		(*DataType_DecimalTypeInfo)(nil),
		(*DataType_ArrayTypeInfo)(nil),
		(*DataType_MapTypeInfo)(nil),
		(*DataType_StructTypeInfo)(nil),
		(*DataType_IntervalDayTimeInfo)(nil),
		(*DataType_IntervalYearMonthInfo)(nil),
		(*DataType_TimestampInfo)(nil),
		(*DataType_FunctionInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_util_data_type_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_util_data_type_proto_goTypes,
		DependencyIndexes: file_util_data_type_proto_depIdxs,
		EnumInfos:         file_util_data_type_proto_enumTypes,
		MessageInfos:      file_util_data_type_proto_msgTypes,
	}.Build()
	File_util_data_type_proto = out.File
	file_util_data_type_proto_rawDesc = nil
	file_util_data_type_proto_goTypes = nil
	file_util_data_type_proto_depIdxs = nil
}

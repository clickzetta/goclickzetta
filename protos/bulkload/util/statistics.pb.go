// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: util/statistics.proto

package util

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SortKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []uint32 `protobuf:"varint,1,rep,packed,name=keys,proto3" json:"keys,omitempty"`
}

func (x *SortKeys) Reset() {
	*x = SortKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortKeys) ProtoMessage() {}

func (x *SortKeys) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortKeys.ProtoReflect.Descriptor instead.
func (*SortKeys) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{0}
}

func (x *SortKeys) GetKeys() []uint32 {
	if x != nil {
		return x.Keys
	}
	return nil
}

type FieldBounds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bounds map[uint32]*Constant `protobuf:"bytes,1,rep,name=bounds,proto3" json:"bounds,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FieldBounds) Reset() {
	*x = FieldBounds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldBounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldBounds) ProtoMessage() {}

func (x *FieldBounds) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldBounds.ProtoReflect.Descriptor instead.
func (*FieldBounds) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{1}
}

func (x *FieldBounds) GetBounds() map[uint32]*Constant {
	if x != nil {
		return x.Bounds
	}
	return nil
}

type StatsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotId  int64        `protobuf:"varint,1,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	SizeInBytes *int64       `protobuf:"varint,2,opt,name=size_in_bytes,json=sizeInBytes,proto3,oneof" json:"size_in_bytes,omitempty"`
	RecordCount *int64       `protobuf:"varint,3,opt,name=record_count,json=recordCount,proto3,oneof" json:"record_count,omitempty"`
	FieldsStats *FieldsStats `protobuf:"bytes,5,opt,name=fields_stats,json=fieldsStats,proto3" json:"fields_stats,omitempty"`
	// file level sort key lower bound, field id -> value
	SortKeyLowerBounds *FieldBounds `protobuf:"bytes,12,opt,name=sort_key_lower_bounds,json=sortKeyLowerBounds,proto3" json:"sort_key_lower_bounds,omitempty"`
	// file level sort key upper bound, field id -> value
	SortKeyUpperBounds *FieldBounds `protobuf:"bytes,13,opt,name=sort_key_upper_bounds,json=sortKeyUpperBounds,proto3" json:"sort_key_upper_bounds,omitempty"`
}

func (x *StatsData) Reset() {
	*x = StatsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsData) ProtoMessage() {}

func (x *StatsData) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsData.ProtoReflect.Descriptor instead.
func (*StatsData) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{2}
}

func (x *StatsData) GetSnapshotId() int64 {
	if x != nil {
		return x.SnapshotId
	}
	return 0
}

func (x *StatsData) GetSizeInBytes() int64 {
	if x != nil && x.SizeInBytes != nil {
		return *x.SizeInBytes
	}
	return 0
}

func (x *StatsData) GetRecordCount() int64 {
	if x != nil && x.RecordCount != nil {
		return *x.RecordCount
	}
	return 0
}

func (x *StatsData) GetFieldsStats() *FieldsStats {
	if x != nil {
		return x.FieldsStats
	}
	return nil
}

func (x *StatsData) GetSortKeyLowerBounds() *FieldBounds {
	if x != nil {
		return x.SortKeyLowerBounds
	}
	return nil
}

func (x *StatsData) GetSortKeyUpperBounds() *FieldBounds {
	if x != nil {
		return x.SortKeyUpperBounds
	}
	return nil
}

type FieldsStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldStats []*FieldStats `protobuf:"bytes,1,rep,name=field_stats,json=fieldStats,proto3" json:"field_stats,omitempty"`
}

func (x *FieldsStats) Reset() {
	*x = FieldsStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldsStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldsStats) ProtoMessage() {}

func (x *FieldsStats) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldsStats.ProtoReflect.Descriptor instead.
func (*FieldsStats) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{3}
}

func (x *FieldsStats) GetFieldStats() []*FieldStats {
	if x != nil {
		return x.FieldStats
	}
	return nil
}

type FieldStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldId    []uint32           `protobuf:"varint,1,rep,packed,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	StatsValue []*FieldStatsValue `protobuf:"bytes,2,rep,name=stats_value,json=statsValue,proto3" json:"stats_value,omitempty"`
}

func (x *FieldStats) Reset() {
	*x = FieldStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldStats) ProtoMessage() {}

func (x *FieldStats) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldStats.ProtoReflect.Descriptor instead.
func (*FieldStats) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{4}
}

func (x *FieldStats) GetFieldId() []uint32 {
	if x != nil {
		return x.FieldId
	}
	return nil
}

func (x *FieldStats) GetStatsValue() []*FieldStatsValue {
	if x != nil {
		return x.StatsValue
	}
	return nil
}

type FieldStatsValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*FieldStatsValue_NanCount
	//	*FieldStatsValue_ValueCount
	//	*FieldStatsValue_NullCount
	//	*FieldStatsValue_LowerBounds
	//	*FieldStatsValue_UpperBounds
	//	*FieldStatsValue_AvgSize
	//	*FieldStatsValue_MaxSize
	//	*FieldStatsValue_CompressedSize
	//	*FieldStatsValue_DistinctNumber
	//	*FieldStatsValue_TopK
	//	*FieldStatsValue_Histogram
	//	*FieldStatsValue_RawSizeInBytes
	Value isFieldStatsValue_Value `protobuf_oneof:"value"`
}

func (x *FieldStatsValue) Reset() {
	*x = FieldStatsValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldStatsValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldStatsValue) ProtoMessage() {}

func (x *FieldStatsValue) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldStatsValue.ProtoReflect.Descriptor instead.
func (*FieldStatsValue) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{5}
}

func (m *FieldStatsValue) GetValue() isFieldStatsValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *FieldStatsValue) GetNanCount() int64 {
	if x, ok := x.GetValue().(*FieldStatsValue_NanCount); ok {
		return x.NanCount
	}
	return 0
}

func (x *FieldStatsValue) GetValueCount() int64 {
	if x, ok := x.GetValue().(*FieldStatsValue_ValueCount); ok {
		return x.ValueCount
	}
	return 0
}

func (x *FieldStatsValue) GetNullCount() int64 {
	if x, ok := x.GetValue().(*FieldStatsValue_NullCount); ok {
		return x.NullCount
	}
	return 0
}

func (x *FieldStatsValue) GetLowerBounds() *Constant {
	if x, ok := x.GetValue().(*FieldStatsValue_LowerBounds); ok {
		return x.LowerBounds
	}
	return nil
}

func (x *FieldStatsValue) GetUpperBounds() *Constant {
	if x, ok := x.GetValue().(*FieldStatsValue_UpperBounds); ok {
		return x.UpperBounds
	}
	return nil
}

func (x *FieldStatsValue) GetAvgSize() float64 {
	if x, ok := x.GetValue().(*FieldStatsValue_AvgSize); ok {
		return x.AvgSize
	}
	return 0
}

func (x *FieldStatsValue) GetMaxSize() int64 {
	if x, ok := x.GetValue().(*FieldStatsValue_MaxSize); ok {
		return x.MaxSize
	}
	return 0
}

func (x *FieldStatsValue) GetCompressedSize() int64 {
	if x, ok := x.GetValue().(*FieldStatsValue_CompressedSize); ok {
		return x.CompressedSize
	}
	return 0
}

func (x *FieldStatsValue) GetDistinctNumber() int64 {
	if x, ok := x.GetValue().(*FieldStatsValue_DistinctNumber); ok {
		return x.DistinctNumber
	}
	return 0
}

func (x *FieldStatsValue) GetTopK() *TopK {
	if x, ok := x.GetValue().(*FieldStatsValue_TopK); ok {
		return x.TopK
	}
	return nil
}

func (x *FieldStatsValue) GetHistogram() *Histogram {
	if x, ok := x.GetValue().(*FieldStatsValue_Histogram); ok {
		return x.Histogram
	}
	return nil
}

func (x *FieldStatsValue) GetRawSizeInBytes() int64 {
	if x, ok := x.GetValue().(*FieldStatsValue_RawSizeInBytes); ok {
		return x.RawSizeInBytes
	}
	return 0
}

type isFieldStatsValue_Value interface {
	isFieldStatsValue_Value()
}

type FieldStatsValue_NanCount struct {
	NanCount int64 `protobuf:"varint,1,opt,name=nan_count,json=nanCount,proto3,oneof"`
}

type FieldStatsValue_ValueCount struct {
	ValueCount int64 `protobuf:"varint,2,opt,name=value_count,json=valueCount,proto3,oneof"`
}

type FieldStatsValue_NullCount struct {
	NullCount int64 `protobuf:"varint,3,opt,name=null_count,json=nullCount,proto3,oneof"`
}

type FieldStatsValue_LowerBounds struct {
	LowerBounds *Constant `protobuf:"bytes,4,opt,name=lower_bounds,json=lowerBounds,proto3,oneof"`
}

type FieldStatsValue_UpperBounds struct {
	UpperBounds *Constant `protobuf:"bytes,5,opt,name=upper_bounds,json=upperBounds,proto3,oneof"`
}

type FieldStatsValue_AvgSize struct {
	AvgSize float64 `protobuf:"fixed64,6,opt,name=avg_size,json=avgSize,proto3,oneof"`
}

type FieldStatsValue_MaxSize struct {
	MaxSize int64 `protobuf:"varint,7,opt,name=max_size,json=maxSize,proto3,oneof"`
}

type FieldStatsValue_CompressedSize struct {
	CompressedSize int64 `protobuf:"varint,8,opt,name=compressed_size,json=compressedSize,proto3,oneof"`
}

type FieldStatsValue_DistinctNumber struct {
	DistinctNumber int64 `protobuf:"varint,9,opt,name=distinct_number,json=distinctNumber,proto3,oneof"`
}

type FieldStatsValue_TopK struct {
	TopK *TopK `protobuf:"bytes,10,opt,name=top_k,json=topK,proto3,oneof"`
}

type FieldStatsValue_Histogram struct {
	Histogram *Histogram `protobuf:"bytes,11,opt,name=histogram,proto3,oneof"`
}

type FieldStatsValue_RawSizeInBytes struct {
	// Size in bytes of columnar data before any encoding or compression.
	//   - For fix-sized type, it's always `value_count * parquet::GetTypeByteSize(T)`,
	//     value_count includes null data.
	//   - For variable-length type, it's `value_count * parquet::GetTypeByteSize(T)
	//   - variable-length`.
	//
	// For complex type, leaf will be counted, and non-leaf types would be the
	// sum of all leaf-type raw size.
	RawSizeInBytes int64 `protobuf:"varint,12,opt,name=raw_size_in_bytes,json=rawSizeInBytes,proto3,oneof"`
}

func (*FieldStatsValue_NanCount) isFieldStatsValue_Value() {}

func (*FieldStatsValue_ValueCount) isFieldStatsValue_Value() {}

func (*FieldStatsValue_NullCount) isFieldStatsValue_Value() {}

func (*FieldStatsValue_LowerBounds) isFieldStatsValue_Value() {}

func (*FieldStatsValue_UpperBounds) isFieldStatsValue_Value() {}

func (*FieldStatsValue_AvgSize) isFieldStatsValue_Value() {}

func (*FieldStatsValue_MaxSize) isFieldStatsValue_Value() {}

func (*FieldStatsValue_CompressedSize) isFieldStatsValue_Value() {}

func (*FieldStatsValue_DistinctNumber) isFieldStatsValue_Value() {}

func (*FieldStatsValue_TopK) isFieldStatsValue_Value() {}

func (*FieldStatsValue_Histogram) isFieldStatsValue_Value() {}

func (*FieldStatsValue_RawSizeInBytes) isFieldStatsValue_Value() {}

type TopK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopK []*Constant `protobuf:"bytes,1,rep,name=top_k,json=topK,proto3" json:"top_k,omitempty"`
}

func (x *TopK) Reset() {
	*x = TopK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopK) ProtoMessage() {}

func (x *TopK) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopK.ProtoReflect.Descriptor instead.
func (*TopK) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{6}
}

func (x *TopK) GetTopK() []*Constant {
	if x != nil {
		return x.TopK
	}
	return nil
}

type HistogramBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LowerBound *Constant `protobuf:"bytes,1,opt,name=lower_bound,json=lowerBound,proto3" json:"lower_bound,omitempty"`
	UpperBound *Constant `protobuf:"bytes,2,opt,name=upper_bound,json=upperBound,proto3" json:"upper_bound,omitempty"`
	ValueCount int64     `protobuf:"varint,3,opt,name=value_count,json=valueCount,proto3" json:"value_count,omitempty"`
}

func (x *HistogramBucket) Reset() {
	*x = HistogramBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistogramBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistogramBucket) ProtoMessage() {}

func (x *HistogramBucket) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistogramBucket.ProtoReflect.Descriptor instead.
func (*HistogramBucket) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{7}
}

func (x *HistogramBucket) GetLowerBound() *Constant {
	if x != nil {
		return x.LowerBound
	}
	return nil
}

func (x *HistogramBucket) GetUpperBound() *Constant {
	if x != nil {
		return x.UpperBound
	}
	return nil
}

func (x *HistogramBucket) GetValueCount() int64 {
	if x != nil {
		return x.ValueCount
	}
	return 0
}

type Histogram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets []*HistogramBucket `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *Histogram) Reset() {
	*x = Histogram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Histogram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Histogram) ProtoMessage() {}

func (x *Histogram) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Histogram.ProtoReflect.Descriptor instead.
func (*Histogram) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{8}
}

func (x *Histogram) GetBuckets() []*HistogramBucket {
	if x != nil {
		return x.Buckets
	}
	return nil
}

type ValuePoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*Constant `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ValuePoint) Reset() {
	*x = ValuePoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValuePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValuePoint) ProtoMessage() {}

func (x *ValuePoint) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValuePoint.ProtoReflect.Descriptor instead.
func (*ValuePoint) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{9}
}

func (x *ValuePoint) GetValues() []*Constant {
	if x != nil {
		return x.Values
	}
	return nil
}

type BoundaryPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Included bool `protobuf:"varint,1,opt,name=included,proto3" json:"included,omitempty"`
	// Types that are assignable to Value:
	//
	//	*BoundaryPoint_Unbounded
	//	*BoundaryPoint_ValuePoint
	Value isBoundaryPoint_Value `protobuf_oneof:"value"`
}

func (x *BoundaryPoint) Reset() {
	*x = BoundaryPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoundaryPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoundaryPoint) ProtoMessage() {}

func (x *BoundaryPoint) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoundaryPoint.ProtoReflect.Descriptor instead.
func (*BoundaryPoint) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{10}
}

func (x *BoundaryPoint) GetIncluded() bool {
	if x != nil {
		return x.Included
	}
	return false
}

func (m *BoundaryPoint) GetValue() isBoundaryPoint_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *BoundaryPoint) GetUnbounded() bool {
	if x, ok := x.GetValue().(*BoundaryPoint_Unbounded); ok {
		return x.Unbounded
	}
	return false
}

func (x *BoundaryPoint) GetValuePoint() *ValuePoint {
	if x, ok := x.GetValue().(*BoundaryPoint_ValuePoint); ok {
		return x.ValuePoint
	}
	return nil
}

type isBoundaryPoint_Value interface {
	isBoundaryPoint_Value()
}

type BoundaryPoint_Unbounded struct {
	Unbounded bool `protobuf:"varint,2,opt,name=unbounded,proto3,oneof"`
}

type BoundaryPoint_ValuePoint struct {
	ValuePoint *ValuePoint `protobuf:"bytes,3,opt,name=value_point,json=valuePoint,proto3,oneof"`
}

func (*BoundaryPoint_Unbounded) isBoundaryPoint_Value() {}

func (*BoundaryPoint_ValuePoint) isBoundaryPoint_Value() {}

type Boundary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lower *BoundaryPoint `protobuf:"bytes,1,opt,name=lower,proto3" json:"lower,omitempty"`
	Upper *BoundaryPoint `protobuf:"bytes,2,opt,name=upper,proto3" json:"upper,omitempty"`
}

func (x *Boundary) Reset() {
	*x = Boundary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Boundary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boundary) ProtoMessage() {}

func (x *Boundary) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boundary.ProtoReflect.Descriptor instead.
func (*Boundary) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{11}
}

func (x *Boundary) GetLower() *BoundaryPoint {
	if x != nil {
		return x.Lower
	}
	return nil
}

func (x *Boundary) GetUpper() *BoundaryPoint {
	if x != nil {
		return x.Upper
	}
	return nil
}

type RangeBoundary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Types  []*DataType `protobuf:"bytes,2,rep,name=types,proto3" json:"types,omitempty"`
	Ranges []*Boundary `protobuf:"bytes,3,rep,name=ranges,proto3" json:"ranges,omitempty"`
}

func (x *RangeBoundary) Reset() {
	*x = RangeBoundary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeBoundary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeBoundary) ProtoMessage() {}

func (x *RangeBoundary) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeBoundary.ProtoReflect.Descriptor instead.
func (*RangeBoundary) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{12}
}

func (x *RangeBoundary) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RangeBoundary) GetTypes() []*DataType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *RangeBoundary) GetRanges() []*Boundary {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type EnforceBoundary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName  string         `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	Boundaries *RangeBoundary `protobuf:"bytes,2,opt,name=boundaries,proto3" json:"boundaries,omitempty"`
}

func (x *EnforceBoundary) Reset() {
	*x = EnforceBoundary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnforceBoundary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnforceBoundary) ProtoMessage() {}

func (x *EnforceBoundary) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnforceBoundary.ProtoReflect.Descriptor instead.
func (*EnforceBoundary) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{13}
}

func (x *EnforceBoundary) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *EnforceBoundary) GetBoundaries() *RangeBoundary {
	if x != nil {
		return x.Boundaries
	}
	return nil
}

type TableBoundary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableBoundaries []*EnforceBoundary `protobuf:"bytes,1,rep,name=table_boundaries,json=tableBoundaries,proto3" json:"table_boundaries,omitempty"`
}

func (x *TableBoundary) Reset() {
	*x = TableBoundary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableBoundary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableBoundary) ProtoMessage() {}

func (x *TableBoundary) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableBoundary.ProtoReflect.Descriptor instead.
func (*TableBoundary) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{14}
}

func (x *TableBoundary) GetTableBoundaries() []*EnforceBoundary {
	if x != nil {
		return x.TableBoundaries
	}
	return nil
}

// file input the min and max of columns
type FieldRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldId uint32    `protobuf:"varint,1,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	Type    *DataType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Range   *Boundary `protobuf:"bytes,3,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *FieldRange) Reset() {
	*x = FieldRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_util_statistics_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldRange) ProtoMessage() {}

func (x *FieldRange) ProtoReflect() protoreflect.Message {
	mi := &file_util_statistics_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldRange.ProtoReflect.Descriptor instead.
func (*FieldRange) Descriptor() ([]byte, []int) {
	return file_util_statistics_proto_rawDescGZIP(), []int{15}
}

func (x *FieldRange) GetFieldId() uint32 {
	if x != nil {
		return x.FieldId
	}
	return 0
}

func (x *FieldRange) GetType() *DataType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *FieldRange) GetRange() *Boundary {
	if x != nil {
		return x.Range
	}
	return nil
}

var File_util_statistics_proto protoreflect.FileDescriptor

var file_util_statistics_proto_rawDesc = []byte{
	0x0a, 0x15, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x74, 0x69, 0x6c, 0x1a, 0x15, 0x75,
	0x74, 0x69, 0x6c, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x08, 0x53, 0x6f,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x0b, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x42, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x1a, 0x49, 0x0a, 0x0b, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe2, 0x02, 0x0a,
	0x09, 0x53, 0x74, 0x61, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0d, 0x73,
	0x69, 0x7a, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0b, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x0c,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x44, 0x0a, 0x15, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x52, 0x12, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x4c, 0x6f, 0x77,
	0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x44, 0x0a, 0x15, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x12, 0x73, 0x6f, 0x72, 0x74,
	0x4b, 0x65, 0x79, 0x55, 0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x40, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x31, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x22, 0x5f, 0x0a, 0x0a, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x73, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xf8, 0x03, 0x0a, 0x0f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x6e, 0x61, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x6e,
	0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x6e, 0x75,
	0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x09, 0x6e, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73,
	0x12, 0x33, 0x0a, 0x0c, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x70, 0x70, 0x65, 0x72, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x08, 0x61, 0x76, 0x67, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x07, 0x61, 0x76, 0x67, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x29, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x0f, 0x64, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x6b, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x54, 0x6f, 0x70, 0x4b,
	0x48, 0x00, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x12, 0x2f, 0x0a, 0x09, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74,
	0x69, 0x6c, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x09,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x61, 0x77,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x61, 0x77, 0x53, 0x69, 0x7a, 0x65, 0x49,
	0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x2b, 0x0a, 0x04, 0x54, 0x6f, 0x70, 0x4b, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x6b,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x22, 0x94, 0x01, 0x0a,
	0x0f, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x2f, 0x0a, 0x0b, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x52, 0x0a, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x2f, 0x0a, 0x0b, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x52, 0x0a, 0x75, 0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x09, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x12, 0x2f, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x22, 0x34, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x42, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x09, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x75, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x60, 0x0a, 0x08, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x12,
	0x29, 0x0a, 0x05, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x05, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x75, 0x70,
	0x70, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x74, 0x69, 0x6c,
	0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05,
	0x75, 0x70, 0x70, 0x65, 0x72, 0x22, 0x6d, 0x0a, 0x0d, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x06,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75,
	0x74, 0x69, 0x6c, 0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x52, 0x06, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x0f, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x52,
	0x0a, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x0d, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x12, 0x40, 0x0a, 0x10,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x45, 0x6e,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x52, 0x0f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0x71,
	0x0a, 0x0a, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6c, 0x69, 0x63, 0x6b, 0x7a, 0x65, 0x74, 0x74, 0x61, 0x2f, 0x67, 0x6f, 0x63, 0x6c, 0x69,
	0x63, 0x6b, 0x7a, 0x65, 0x74, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62,
	0x75, 0x6c, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_util_statistics_proto_rawDescOnce sync.Once
	file_util_statistics_proto_rawDescData = file_util_statistics_proto_rawDesc
)

func file_util_statistics_proto_rawDescGZIP() []byte {
	file_util_statistics_proto_rawDescOnce.Do(func() {
		file_util_statistics_proto_rawDescData = protoimpl.X.CompressGZIP(file_util_statistics_proto_rawDescData)
	})
	return file_util_statistics_proto_rawDescData
}

var file_util_statistics_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_util_statistics_proto_goTypes = []interface{}{
	(*SortKeys)(nil),        // 0: util.SortKeys
	(*FieldBounds)(nil),     // 1: util.FieldBounds
	(*StatsData)(nil),       // 2: util.StatsData
	(*FieldsStats)(nil),     // 3: util.FieldsStats
	(*FieldStats)(nil),      // 4: util.FieldStats
	(*FieldStatsValue)(nil), // 5: util.FieldStatsValue
	(*TopK)(nil),            // 6: util.TopK
	(*HistogramBucket)(nil), // 7: util.HistogramBucket
	(*Histogram)(nil),       // 8: util.Histogram
	(*ValuePoint)(nil),      // 9: util.ValuePoint
	(*BoundaryPoint)(nil),   // 10: util.BoundaryPoint
	(*Boundary)(nil),        // 11: util.Boundary
	(*RangeBoundary)(nil),   // 12: util.RangeBoundary
	(*EnforceBoundary)(nil), // 13: util.EnforceBoundary
	(*TableBoundary)(nil),   // 14: util.TableBoundary
	(*FieldRange)(nil),      // 15: util.FieldRange
	nil,                     // 16: util.FieldBounds.BoundsEntry
	(*Constant)(nil),        // 17: util.Constant
	(*DataType)(nil),        // 18: util.DataType
}
var file_util_statistics_proto_depIdxs = []int32{
	16, // 0: util.FieldBounds.bounds:type_name -> util.FieldBounds.BoundsEntry
	3,  // 1: util.StatsData.fields_stats:type_name -> util.FieldsStats
	1,  // 2: util.StatsData.sort_key_lower_bounds:type_name -> util.FieldBounds
	1,  // 3: util.StatsData.sort_key_upper_bounds:type_name -> util.FieldBounds
	4,  // 4: util.FieldsStats.field_stats:type_name -> util.FieldStats
	5,  // 5: util.FieldStats.stats_value:type_name -> util.FieldStatsValue
	17, // 6: util.FieldStatsValue.lower_bounds:type_name -> util.Constant
	17, // 7: util.FieldStatsValue.upper_bounds:type_name -> util.Constant
	6,  // 8: util.FieldStatsValue.top_k:type_name -> util.TopK
	8,  // 9: util.FieldStatsValue.histogram:type_name -> util.Histogram
	17, // 10: util.TopK.top_k:type_name -> util.Constant
	17, // 11: util.HistogramBucket.lower_bound:type_name -> util.Constant
	17, // 12: util.HistogramBucket.upper_bound:type_name -> util.Constant
	7,  // 13: util.Histogram.buckets:type_name -> util.HistogramBucket
	17, // 14: util.ValuePoint.values:type_name -> util.Constant
	9,  // 15: util.BoundaryPoint.value_point:type_name -> util.ValuePoint
	10, // 16: util.Boundary.lower:type_name -> util.BoundaryPoint
	10, // 17: util.Boundary.upper:type_name -> util.BoundaryPoint
	18, // 18: util.RangeBoundary.types:type_name -> util.DataType
	11, // 19: util.RangeBoundary.ranges:type_name -> util.Boundary
	12, // 20: util.EnforceBoundary.boundaries:type_name -> util.RangeBoundary
	13, // 21: util.TableBoundary.table_boundaries:type_name -> util.EnforceBoundary
	18, // 22: util.FieldRange.type:type_name -> util.DataType
	11, // 23: util.FieldRange.range:type_name -> util.Boundary
	17, // 24: util.FieldBounds.BoundsEntry.value:type_name -> util.Constant
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_util_statistics_proto_init() }
func file_util_statistics_proto_init() {
	if File_util_statistics_proto != nil {
		return
	}
	file_util_expression_proto_init()
	file_util_data_type_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_util_statistics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_statistics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldBounds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_statistics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_statistics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldsStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_statistics_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_statistics_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldStatsValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_statistics_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_statistics_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistogramBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_statistics_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Histogram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_statistics_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValuePoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_statistics_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoundaryPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_statistics_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Boundary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_statistics_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeBoundary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_statistics_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnforceBoundary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_statistics_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableBoundary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_util_statistics_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_util_statistics_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_util_statistics_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*FieldStatsValue_NanCount)(nil),
		(*FieldStatsValue_ValueCount)(nil),
		(*FieldStatsValue_NullCount)(nil),
		(*FieldStatsValue_LowerBounds)(nil),
		(*FieldStatsValue_UpperBounds)(nil),
		(*FieldStatsValue_AvgSize)(nil),
		(*FieldStatsValue_MaxSize)(nil),
		(*FieldStatsValue_CompressedSize)(nil),
		(*FieldStatsValue_DistinctNumber)(nil),
		(*FieldStatsValue_TopK)(nil),
		(*FieldStatsValue_Histogram)(nil),
		(*FieldStatsValue_RawSizeInBytes)(nil),
	}
	file_util_statistics_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*BoundaryPoint_Unbounded)(nil),
		(*BoundaryPoint_ValuePoint)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_util_statistics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_util_statistics_proto_goTypes,
		DependencyIndexes: file_util_statistics_proto_depIdxs,
		MessageInfos:      file_util_statistics_proto_msgTypes,
	}.Build()
	File_util_statistics_proto = out.File
	file_util_statistics_proto_rawDesc = nil
	file_util_statistics_proto_goTypes = nil
	file_util_statistics_proto_depIdxs = nil
}
